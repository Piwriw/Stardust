/*
 Navicat Premium Data Transfer

 Source Server         : server-ali
 Source Server Type    : MySQL
 Source Server Version : 80020
 Source Host           : 47.103.193.67:3307
 Source Schema         : stardust

 Target Server Type    : MySQL
 Target Server Version : 80020
 File Encoding         : 65001

 Date: 10/11/2021 22:03:56
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for sys_log
-- ----------------------------
DROP TABLE IF EXISTS `sys_log`;
CREATE TABLE `sys_log`  (
  `oper_id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '日志主键',
  `title` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '模块标题',
  `method` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '方法名称',
  `type` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '类型',
  `request_method` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '请求方式',
  `oper_name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '操作人员',
  `oper_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '请求URL',
  `ip` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '主机地址',
  `browser` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '浏览器信息',
  `location` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '操作地点',
  `params` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '请求参数',
  `exception_detail` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '错误消息',
  `oper_time` bigint NULL DEFAULT NULL COMMENT '操作时间',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`oper_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '操作日志记录' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_log
-- ----------------------------
INSERT INTO `sys_log` VALUES (653, '访问首页', 'com.lht.admin.controller.AdminController.index()', 'INFO', 'GET', 'admin', '/api/console', '113.75.162.242', 'Chrome 9', '', '{ model: ...}', NULL, 310, '2021-11-10 20:58:56');
INSERT INTO `sys_log` VALUES (654, '通过用户id获取对应的菜单', 'com.lht.admin.controller.AdminController.getMenuByUserId()', 'INFO', 'GET', 'admin', '/api/index', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 196, '2021-11-10 20:58:56');
INSERT INTO `sys_log` VALUES (655, '访问首页', 'com.lht.admin.controller.AdminController.index()', 'INFO', 'GET', 'admin', '/api/console', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ model: ...}', NULL, 99, '2021-11-10 21:00:29');
INSERT INTO `sys_log` VALUES (656, '修改密码', 'com.lht.admin.controller.UserController.resetPassword()', 'INFO', 'PUT', 'admin', '/api/user/reset', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ dto: ResetPasswordDto(oldPassword=hongtao945, newPassword=123456)}', NULL, 233, '2021-11-10 21:00:56');
INSERT INTO `sys_log` VALUES (657, '通过用户id获取对应的菜单', 'com.lht.admin.controller.AdminController.getMenuByUserId()', 'INFO', 'GET', 'admin', '/api/index', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 34, '2021-11-10 21:01:05');
INSERT INTO `sys_log` VALUES (658, '访问首页', 'com.lht.admin.controller.AdminController.index()', 'INFO', 'GET', 'admin', '/api/console', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ model: ...}', NULL, 107, '2021-11-10 21:01:05');
INSERT INTO `sys_log` VALUES (659, '通过用户id获取对应的菜单', 'com.lht.admin.controller.AdminController.getMenuByUserId()', 'INFO', 'GET', 'test', '/api/index', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 39, '2021-11-10 21:01:42');
INSERT INTO `sys_log` VALUES (660, '访问首页', 'com.lht.admin.controller.AdminController.index()', 'INFO', 'GET', 'test', '/api/console', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ model: ...}', NULL, 93, '2021-11-10 21:01:42');
INSERT INTO `sys_log` VALUES (661, '模糊查询七牛云中的图片数据', 'com.lht.admin.controller.QiniuController.getPhotoContent()', 'INFO', 'GET', 'test', '/api/qiniu', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) qiniuQueryDto: QiniuQueryDto(name=null, startTime=null, endTime=null)}', NULL, 100, '2021-11-10 21:01:46');
INSERT INTO `sys_log` VALUES (662, '通过用户id获取对应的菜单', 'com.lht.admin.controller.AdminController.getMenuByUserId()', 'INFO', 'GET', 'admin', '/api/index', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 33, '2021-11-10 21:04:03');
INSERT INTO `sys_log` VALUES (663, '访问首页', 'com.lht.admin.controller.AdminController.index()', 'INFO', 'GET', 'admin', '/api/console', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ model: ...}', NULL, 211, '2021-11-10 21:04:03');
INSERT INTO `sys_log` VALUES (664, '模糊查询错误日志列表', 'com.lht.admin.controller.LogController.fuzzyGetErrorLogList()', 'INFO', 'GET', 'admin', '/api/log/error', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) logQueryDto: LogQueryDto(Operator=null, title=null, startDate=null, endDate=null)}', NULL, 17, '2021-11-10 21:04:10');
INSERT INTO `sys_log` VALUES (665, '模糊查询普通日志列表', 'com.lht.admin.controller.LogController.fuzzyGetLogList()', 'INFO', 'GET', 'admin', '/api/log', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) logQueryDto: LogQueryDto(Operator=null, title=null, startDate=null, endDate=null)}', NULL, 27, '2021-11-10 21:04:12');
INSERT INTO `sys_log` VALUES (666, '模糊查询普通日志列表', 'com.lht.admin.controller.LogController.fuzzyGetLogList()', 'INFO', 'GET', 'admin', '/api/log', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=2, limit=10) logQueryDto: LogQueryDto(Operator=null, title=null, startDate=null, endDate=null)}', NULL, 20, '2021-11-10 21:04:18');
INSERT INTO `sys_log` VALUES (667, '通过用户id获取对应的菜单', 'com.lht.admin.controller.AdminController.getMenuByUserId()', 'INFO', 'GET', 'admin', '/api/index', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 6, '2021-11-10 21:15:51');
INSERT INTO `sys_log` VALUES (668, '访问首页', 'com.lht.admin.controller.AdminController.index()', 'INFO', 'GET', 'admin', '/api/console', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ model: ...}', NULL, 164, '2021-11-10 21:15:51');
INSERT INTO `sys_log` VALUES (669, '模糊查询友链列表', 'com.lht.admin.controller.LinkController.fuzzyGetLinkList()', 'INFO', 'GET', 'admin', '/api/page/link', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) queryDto: LinkQueryDto(nickName=null, status=null, startTime=null, endTime=null)}', NULL, 70, '2021-11-10 21:51:11');
INSERT INTO `sys_log` VALUES (670, '打开审核页面', 'com.lht.admin.controller.LinkController.toAuditLink()', 'INFO', 'GET', 'admin', '/api/page/link/audit', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ model: ... linkId: 1}', NULL, 9, '2021-11-10 21:51:24');
INSERT INTO `sys_log` VALUES (671, '审核友链', 'com.lht.admin.controller.LinkController.audit()', 'INFO', 'POST', 'admin', '/api/page/link/audit', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ auditDto: LinkAuditDto(LinkId=1, status=2)}', NULL, 16, '2021-11-10 21:51:28');
INSERT INTO `sys_log` VALUES (672, '模糊查询友链列表', 'com.lht.admin.controller.LinkController.fuzzyGetLinkList()', 'INFO', 'GET', 'admin', '/api/page/link', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) queryDto: LinkQueryDto(nickName=null, status=null, startTime=null, endTime=null)}', NULL, 62, '2021-11-10 21:51:29');
INSERT INTO `sys_log` VALUES (673, '打开更新友链页面', 'com.lht.admin.controller.LinkController.toEditLink()', 'INFO', 'GET', 'admin', '/api/page/link/edit', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ model: ... linkId: 1}', NULL, 11, '2021-11-10 21:59:45');
INSERT INTO `sys_log` VALUES (674, '更新一个友链', 'com.lht.admin.controller.LinkController.update()', 'INFO', 'PUT', 'admin', '/api/page/link', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ link: ...}', NULL, 25, '2021-11-10 22:01:07');
INSERT INTO `sys_log` VALUES (675, '模糊查询友链列表', 'com.lht.admin.controller.LinkController.fuzzyGetLinkList()', 'INFO', 'GET', 'admin', '/api/page/link', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) queryDto: LinkQueryDto(nickName=null, status=null, startTime=null, endTime=null)}', NULL, 68, '2021-11-10 22:01:08');
INSERT INTO `sys_log` VALUES (676, '打开审核页面', 'com.lht.admin.controller.LinkController.toAuditLink()', 'INFO', 'GET', 'admin', '/api/page/link/audit', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ model: ... linkId: 1}', NULL, 6, '2021-11-10 22:01:10');
INSERT INTO `sys_log` VALUES (677, '审核友链', 'com.lht.admin.controller.LinkController.audit()', 'INFO', 'POST', 'admin', '/api/page/link/audit', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ auditDto: LinkAuditDto(LinkId=1, status=2)}', NULL, 24, '2021-11-10 22:01:12');
INSERT INTO `sys_log` VALUES (678, '模糊查询友链列表', 'com.lht.admin.controller.LinkController.fuzzyGetLinkList()', 'INFO', 'GET', 'admin', '/api/page/link', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) queryDto: LinkQueryDto(nickName=null, status=null, startTime=null, endTime=null)}', NULL, 52, '2021-11-10 22:01:13');
INSERT INTO `sys_log` VALUES (679, '分页获取留言', 'com.lht.admin.controller.MessageController.fuzzyGetMessageList()', 'INFO', 'GET', 'admin', '/api/page/message', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) commentOrMessageQueryDto: CommentOrMessageQueryDto(nickname=null, startTime=null, endTime=null)}', NULL, 28, '2021-11-10 22:02:01');
INSERT INTO `sys_log` VALUES (680, '分页获取留言', 'com.lht.admin.controller.CommentController.fuzzyGetMessageList()', 'INFO', 'GET', 'admin', '/api/page/comment', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) commentOrMessageQueryDto: CommentOrMessageQueryDto(nickname=null, startTime=null, endTime=null)}', NULL, 12, '2021-11-10 22:02:05');
INSERT INTO `sys_log` VALUES (681, '模糊查询标签列表', 'com.lht.admin.controller.TagController.fuzzyGetTagList()', 'INFO', 'GET', 'admin', '/api/page/tag', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ pageRequest: PageTableRequest(page=1, limit=10) query: TagQueryDto(queryName=null, startTime=null, endTime=null)}', NULL, 39, '2021-11-10 22:02:06');
INSERT INTO `sys_log` VALUES (682, '跳转到文章管理页面', 'com.lht.admin.controller.ArticleController.index()', 'INFO', 'GET', 'admin', '/api/page/article/index', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 6, '2021-11-10 22:02:09');
INSERT INTO `sys_log` VALUES (683, '获取所有分类', 'com.lht.admin.controller.ClassificationController.getAllClassification()', 'INFO', 'GET', 'admin', '/api/page/classification/allClassification', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 42, '2021-11-10 22:02:09');
INSERT INTO `sys_log` VALUES (684, '分页模糊查询文章列表', 'com.lht.admin.controller.ArticleController.fuzzyGetArticles()', 'INFO', 'GET', 'admin', '/api/page/article', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) articleQueryDto: ...}', NULL, 54, '2021-11-10 22:02:09');
INSERT INTO `sys_log` VALUES (685, '模糊查询分类列表', 'com.lht.admin.controller.ClassificationController.fuzzyGetClassificationList()', 'INFO', 'GET', 'admin', '/api/page/classification', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) queryDto: ClassificationQueryDto(name=null, display=null, startTime=null, endTime=null)}', NULL, 17, '2021-11-10 22:02:13');
INSERT INTO `sys_log` VALUES (686, '跳转到发布文章页面', 'com.lht.admin.controller.ArticleController.toAddArticle()', 'INFO', 'GET', 'admin', '/api/page/article/article-add', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 0, '2021-11-10 22:02:22');
INSERT INTO `sys_log` VALUES (687, '获取所有标签', 'com.lht.admin.controller.TagController.getAllTags()', 'INFO', 'GET', 'admin', '/api/page/tag/allTags', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 8, '2021-11-10 22:02:22');
INSERT INTO `sys_log` VALUES (688, '获取所有分类', 'com.lht.admin.controller.ClassificationController.getAllClassification()', 'INFO', 'GET', 'admin', '/api/page/classification/allClassification', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{}', NULL, 8, '2021-11-10 22:02:22');
INSERT INTO `sys_log` VALUES (689, '访问首页', 'com.lht.admin.controller.AdminController.index()', 'INFO', 'GET', 'admin', '/api/console', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ model: ...}', NULL, 102, '2021-11-10 22:02:25');
INSERT INTO `sys_log` VALUES (690, '模糊查询七牛云中的图片数据', 'com.lht.admin.controller.QiniuController.getPhotoContent()', 'INFO', 'GET', 'admin', '/api/qiniu', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) qiniuQueryDto: QiniuQueryDto(name=null, startTime=null, endTime=null)}', NULL, 64, '2021-11-10 22:02:32');
INSERT INTO `sys_log` VALUES (691, '模糊查询普通日志列表', 'com.lht.admin.controller.LogController.fuzzyGetLogList()', 'INFO', 'GET', 'admin', '/api/log', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) logQueryDto: LogQueryDto(Operator=null, title=null, startDate=null, endDate=null)}', NULL, 22, '2021-11-10 22:02:40');
INSERT INTO `sys_log` VALUES (692, '模糊查询错误日志列表', 'com.lht.admin.controller.LogController.fuzzyGetErrorLogList()', 'INFO', 'GET', 'admin', '/api/log/error', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) logQueryDto: LogQueryDto(Operator=null, title=null, startDate=null, endDate=null)}', NULL, 10, '2021-11-10 22:02:41');
INSERT INTO `sys_log` VALUES (693, '模糊查询七牛云中的图片数据', 'com.lht.admin.controller.QiniuController.getPhotoContent()', 'INFO', 'GET', 'admin', '/api/qiniu', '113.75.162.242', 'Chrome 9', '中国|广东省|韶关市|电信', '{ request: PageTableRequest(page=1, limit=10) qiniuQueryDto: QiniuQueryDto(name=null, startTime=null, endTime=null)}', NULL, 67, '2021-11-10 22:02:45');

-- ----------------------------
-- Table structure for sys_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_menu`;
CREATE TABLE `sys_menu`  (
  `menu_id` bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `menu_name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '菜单名称',
  `parent_id` bigint NULL DEFAULT 0 COMMENT '父菜单ID',
  `sort` int NULL DEFAULT 0 COMMENT '显示顺序',
  `url` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '请求地址',
  `type` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '菜单类型（0目录 1菜单 2按钮）',
  `visible` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '菜单状态（0显示 1隐藏）',
  `permission` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '权限标识',
  `icon` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '#' COMMENT '菜单图标',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `remark` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`menu_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 61 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '菜单权限表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_menu
-- ----------------------------
INSERT INTO `sys_menu` VALUES (1, '博客管理', 0, 1, '', '0', '0', NULL, 'layui-icon layui-icon-console', '2021-03-20 20:54:32', '2021-03-20 20:54:34', NULL);
INSERT INTO `sys_menu` VALUES (2, '控制后台', 1, 2, '/api/console', '1', '0', '', 'layui-icon layui-icon-console', '2021-03-20 20:54:32', '2021-03-20 20:54:34', NULL);
INSERT INTO `sys_menu` VALUES (3, '系统管理', 0, 3, NULL, '0', '0', NULL, 'layui-icon layui-icon-set-fill', '2021-03-20 21:16:49', '2021-03-20 21:16:51', NULL);
INSERT INTO `sys_menu` VALUES (4, '用户管理', 3, 4, '/api/user/index', '1', '0', 'user:list', 'layui-icon layui-icon-username', '2021-03-20 21:18:17', '2021-03-20 21:18:18', NULL);
INSERT INTO `sys_menu` VALUES (5, '角色管理', 3, 5, '/api/role/index', '1', '0', 'role:list', 'layui-icon layui-icon-user', '2021-03-20 21:22:13', '2021-03-20 21:22:14', NULL);
INSERT INTO `sys_menu` VALUES (6, '菜单管理', 3, 6, '/api/menu/index', '1', '0', 'menu:list', 'layui-icon layui-icon-vercode', '2021-03-20 21:22:27', '2021-03-20 21:22:26', NULL);
INSERT INTO `sys_menu` VALUES (7, '用户新增', 4, 4, NULL, '2', '0', 'user:add', '', '2021-03-20 21:25:13', '2021-03-20 21:25:14', NULL);
INSERT INTO `sys_menu` VALUES (8, '用户编辑', 4, 4, NULL, '2', '0', 'user:edit', '', '2021-03-20 21:25:34', '2021-03-20 21:25:33', NULL);
INSERT INTO `sys_menu` VALUES (9, '用户删除', 4, 4, NULL, '2', '0', 'user:delete', '', '2021-03-20 21:27:18', '2021-03-20 21:27:19', NULL);
INSERT INTO `sys_menu` VALUES (10, '角色新增', 5, 5, NULL, '2', '0', 'role:add', '', '2021-03-20 21:28:44', '2021-03-20 21:28:45', NULL);
INSERT INTO `sys_menu` VALUES (11, '角色编辑', 5, 5, NULL, '2', '0', 'role:edit', '', '2021-03-20 21:28:45', '2021-03-20 21:28:46', NULL);
INSERT INTO `sys_menu` VALUES (12, '角色删除', 5, 5, NULL, '2', '0', 'role:delete', '', '2021-03-20 21:28:47', '2021-03-20 21:28:47', NULL);
INSERT INTO `sys_menu` VALUES (13, '菜单新增', 6, 6, NULL, '2', '0', 'menu:add', '', '2021-03-20 21:30:27', '2021-03-20 21:30:28', NULL);
INSERT INTO `sys_menu` VALUES (14, '菜单编辑', 6, 6, NULL, '2', '0', 'menu:edit', '', '2021-03-20 21:30:29', '2021-03-20 21:30:29', NULL);
INSERT INTO `sys_menu` VALUES (15, '菜单删除', 6, 6, NULL, '2', '0', 'menu:delete', '', '2021-03-20 21:30:30', '2021-03-20 21:30:31', NULL);
INSERT INTO `sys_menu` VALUES (16, '系统监控', 0, 7, '', '0', '0', '', 'layui-icon layui-icon layui-icon-auz', '2021-03-20 23:54:30', '2021-10-27 13:27:46', NULL);
INSERT INTO `sys_menu` VALUES (17, 'SQL监控', 16, 8, '/druid/login', '1', '0', '', 'layui-icon layui-icon-template-1', '2021-03-21 01:39:27', '2021-03-21 01:39:27', NULL);
INSERT INTO `sys_menu` VALUES (18, '接口文档', 54, 12, '/doc.html', '1', '0', '', 'layui-icon layui-icon-senior', '2021-03-21 01:41:36', '2021-04-02 12:54:38', NULL);
INSERT INTO `sys_menu` VALUES (19, '操作日志', 16, 7, '/api/log/index', '1', '0', 'log:list', 'layui-icon layui-icon-app', '2021-03-21 01:42:32', '2021-03-21 11:59:21', NULL);
INSERT INTO `sys_menu` VALUES (20, '异常日志', 16, 7, '/api/log/error/index', '1', '0', 'errorLog:list', 'layui-icon layui-icon-tips', '2021-03-21 01:43:43', '2021-03-21 01:43:43', NULL);
INSERT INTO `sys_menu` VALUES (22, '文章管理', 1, 2, '/api/page/article/index', '1', '0', '', 'layui-icon layui-icon-align-left', '2021-03-22 12:44:34', '2021-03-22 12:44:34', NULL);
INSERT INTO `sys_menu` VALUES (23, '分类管理', 1, 2, '/api/page/classification/index', '1', '0', '', 'layui-icon layui-icon-about', '2021-03-22 12:50:32', '2021-03-25 19:18:35', NULL);
INSERT INTO `sys_menu` VALUES (24, '标签管理', 1, 4, '/api/page/tag/index', '1', '0', '', 'layui-icon layui-icon-note', '2021-03-22 12:51:44', '2021-03-25 19:14:54', NULL);
INSERT INTO `sys_menu` VALUES (25, '评论管理', 1, 5, '/api/page/comment/index', '1', '0', '', 'layui-icon layui-icon-reply-fill', '2021-03-22 12:56:12', '2021-03-22 12:56:12', NULL);
INSERT INTO `sys_menu` VALUES (26, '留言管理', 1, 6, '/api/page/message/index', '1', '0', '', 'layui-icon layui-icon-dialogue', '2021-03-22 12:57:29', '2021-03-22 12:57:29', NULL);
INSERT INTO `sys_menu` VALUES (27, '友链管理', 1, 7, '/api/page/link/index', '1', '0', '', 'layui-icon layui-icon-link', '2021-03-22 13:00:24', '2021-03-22 13:00:24', NULL);
INSERT INTO `sys_menu` VALUES (28, '相册管理', 1, 8, '/api/page/photo/index', '1', '0', '', 'layui-icon layui-icon-picture-fine', '2021-03-22 13:01:19', '2021-03-22 13:01:19', NULL);
INSERT INTO `sys_menu` VALUES (29, '提交文章', 1, 2, '/api/page/article/article-add', '1', '0', 'blog:article:add', 'layui-icon layui-icon-align-left', '2021-03-22 20:18:43', '2021-03-25 15:40:33', NULL);
INSERT INTO `sys_menu` VALUES (30, '编辑文章', 22, 100, '', '2', '0', 'blog:article:edit', '', '2021-03-22 20:39:56', '2021-03-22 20:39:56', NULL);
INSERT INTO `sys_menu` VALUES (31, '删除文章', 22, 100, '', '2', '0', 'blog:article:delete', '', '2021-03-22 20:40:25', '2021-03-22 20:40:25', NULL);
INSERT INTO `sys_menu` VALUES (32, '添加分类', 23, 100, '', '2', '0', 'blog:category:add', '', '2021-03-22 20:57:59', '2021-03-22 20:57:59', NULL);
INSERT INTO `sys_menu` VALUES (33, '修改分类', 23, 100, '', '2', '0', 'blog:category:edit', '', '2021-03-22 20:59:27', '2021-03-22 20:59:27', NULL);
INSERT INTO `sys_menu` VALUES (34, '删除分类', 23, 100, '', '2', '0', 'blog:category:delete', '', '2021-03-22 21:00:34', '2021-03-22 21:00:34', NULL);
INSERT INTO `sys_menu` VALUES (36, '新增标签', 24, 100, '', '2', '0', 'blog:tag:add', '', '2021-03-22 21:06:16', '2021-03-22 21:06:16', NULL);
INSERT INTO `sys_menu` VALUES (37, '编辑标签', 24, 100, '', '2', '0', 'blog:tag:edit', '', '2021-03-22 21:06:43', '2021-03-22 21:06:43', NULL);
INSERT INTO `sys_menu` VALUES (38, '删除标签', 24, 100, '', '2', '0', 'blog:tag:delete', '', '2021-03-22 21:07:53', '2021-03-22 21:07:53', NULL);
INSERT INTO `sys_menu` VALUES (39, '删除评论', 25, 100, '', '2', '0', 'blog:comment:edit', '', '2021-03-22 21:11:36', '2021-03-22 21:11:36', NULL);
INSERT INTO `sys_menu` VALUES (42, '审核评论', 25, 100, '', '2', '0', 'blog:comment:audit', '', '2021-03-22 21:14:42', '2021-03-22 21:14:42', NULL);
INSERT INTO `sys_menu` VALUES (44, '删除留言', 26, 100, '', '2', '0', 'blog:message:delete', '', '2021-03-22 21:19:29', '2021-03-22 21:19:29', NULL);
INSERT INTO `sys_menu` VALUES (45, '审核留言', 26, 100, '', '2', '0', 'blog:message:audit', '', '2021-03-22 21:24:20', '2021-03-22 21:24:20', NULL);
INSERT INTO `sys_menu` VALUES (47, '添加友链', 27, 100, '', '2', '0', 'blog:link:add', '', '2021-03-22 21:31:37', '2021-03-22 21:31:37', NULL);
INSERT INTO `sys_menu` VALUES (48, '编辑友链', 27, 100, '', '2', '0', 'blog:link:edit', '', '2021-03-22 21:32:00', '2021-03-22 21:32:00', NULL);
INSERT INTO `sys_menu` VALUES (49, '删除友链', 27, 100, '', '2', '0', 'blog:link:delete', '', '2021-03-22 21:32:24', '2021-03-22 21:32:24', NULL);
INSERT INTO `sys_menu` VALUES (50, '审核友链', 27, 100, '', '2', '0', 'blog:link:audit', '', '2021-03-22 21:33:23', '2021-03-22 21:33:23', NULL);
INSERT INTO `sys_menu` VALUES (51, '添加照片', 28, 100, '', '2', '0', 'blog:photo:add', '', '2021-03-22 21:35:04', '2021-03-22 21:35:04', NULL);
INSERT INTO `sys_menu` VALUES (52, '编辑照片', 28, 100, '', '2', '0', 'blog:photo:edit', '', '2021-03-22 21:36:14', '2021-03-22 21:36:14', NULL);
INSERT INTO `sys_menu` VALUES (53, '删除照片', 28, 100, '', '2', '0', 'blog:photo:delete', '', '2021-03-22 21:36:37', '2021-03-22 21:36:37', NULL);
INSERT INTO `sys_menu` VALUES (54, '系统工具', 0, 8, '', '0', '0', '', 'layui-icon layui-icon-read', '2021-03-31 20:49:30', '2021-10-27 13:29:23', NULL);
INSERT INTO `sys_menu` VALUES (55, '七牛云', 54, 10, 'api/qiniu/index', '1', '0', '', 'layui-icon layui-icon-form', '2021-03-31 20:51:19', '2021-03-31 20:51:33', NULL);
INSERT INTO `sys_menu` VALUES (57, '公告管理', 3, 7, '/api/notice/index', '1', '0', 'notice:list', 'layui-icon layui-icon-survey', '2021-11-02 20:48:06', '2021-11-02 20:48:06', NULL);
INSERT INTO `sys_menu` VALUES (59, '添加公告', 57, 100, '', '2', '0', 'notice:add', '', '2021-11-05 02:03:04', '2021-11-05 02:03:04', NULL);
INSERT INTO `sys_menu` VALUES (60, '编辑公告', 57, 100, '', '2', '0', 'notice:edit', '', '2021-11-05 02:04:15', '2021-11-05 02:04:15', NULL);
INSERT INTO `sys_menu` VALUES (61, '删除公告', 57, 100, '', '2', '0', 'notice:delete', '', '2021-11-05 02:04:40', '2021-11-05 02:04:40', NULL);

-- ----------------------------
-- Table structure for sys_notice
-- ----------------------------
DROP TABLE IF EXISTS `sys_notice`;
CREATE TABLE `sys_notice`  (
  `notice_id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '公告ID',
  `notice_content` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '公告内容',
  `status` bit(1) NULL DEFAULT b'1' COMMENT '公告状态（1正常 0关闭）',
  `create_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '创建者',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`notice_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '通知公告表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_notice
-- ----------------------------
INSERT INTO `sys_notice` VALUES (2, '新增了七牛云作为图床', b'1', '管理员', '2021-11-02 23:18:34');
INSERT INTO `sys_notice` VALUES (3, '使用Redis作为缓存和统计网站PV和UV', b'1', '管理员', '2021-11-02 23:19:10');
INSERT INTO `sys_notice` VALUES (6, '使用ElasticSearch提供全文检索服务', b'1', '管理员', '2021-11-02 23:21:01');
INSERT INTO `sys_notice` VALUES (7, '使用Vue重构前台博客', b'1', '管理员', '2021-11-02 23:21:29');
INSERT INTO `sys_notice` VALUES (8, '使用Aop实现日志管理', b'1', '管理员', '2021-11-04 22:02:22');
INSERT INTO `sys_notice` VALUES (9, '优化了一些代码', b'1', '管理员', '2021-11-04 22:02:51');

-- ----------------------------
-- Table structure for sys_qiniu_config
-- ----------------------------
DROP TABLE IF EXISTS `sys_qiniu_config`;
CREATE TABLE `sys_qiniu_config`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '主键',
  `access_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT 'AccessKey',
  `secret_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT 'SecretKey',
  `bucket` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '空间名称',
  `domain` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '域名',
  `type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '公开' COMMENT '类型：公开或私有',
  `zone` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '地区',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Table structure for sys_qiniu_content
-- ----------------------------
DROP TABLE IF EXISTS `sys_qiniu_content`;
CREATE TABLE `sys_qiniu_content`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '文件名称',
  `file_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '文件类型',
  `url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT 'url地址',
  `size` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '文件大小',
  `type` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '文件类型：公开或私有',
  `bucket` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '空间名称',
  `suffix` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_qiniu_content
-- ----------------------------
INSERT INTO `sys_qiniu_content` VALUES (4, 'Star07', '图片', 'http://qqu1ruqfu.hn-bkt.clouddn.com//Star07.jpg', '645.54KB   ', '公开', 'stardust01', 'jpg', '2021-04-02 11:34:21');
INSERT INTO `sys_qiniu_content` VALUES (5, 'Star01', '图片', 'http://qqu1ruqfu.hn-bkt.clouddn.com//Star01.jpg', '296.65KB   ', '公开', 'stardust01', 'jpg', '2021-04-02 12:08:10');

-- ----------------------------
-- Table structure for sys_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_role`;
CREATE TABLE `sys_role`  (
  `role_id` bigint NOT NULL AUTO_INCREMENT COMMENT '角色ID',
  `role_name` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '角色名称',
  `role_name_zh` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '角色中文名称',
  `data_scope` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '数据范围（1：全部数据权限 2：自定数据权限 ）',
  `status` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '角色状态（0正常 1停用）',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `remark` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`role_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '角色信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_role
-- ----------------------------
INSERT INTO `sys_role` VALUES (1, 'admin', '系统管理员', NULL, '0', '2021-03-20 17:03:56', '2021-03-20 17:04:00', '系统管理员,拥有所有权限');
INSERT INTO `sys_role` VALUES (2, 'author', '作者', NULL, '0', '2021-03-20 17:04:44', '2021-03-20 17:04:46', '作者，能够更新博客');

-- ----------------------------
-- Table structure for sys_role_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_role_menu`;
CREATE TABLE `sys_role_menu`  (
  `role_id` bigint NOT NULL COMMENT '角色ID',
  `menu_id` bigint NOT NULL COMMENT '菜单ID',
  PRIMARY KEY (`role_id`, `menu_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '角色和菜单关联表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_role_menu
-- ----------------------------
INSERT INTO `sys_role_menu` VALUES (1, 1);
INSERT INTO `sys_role_menu` VALUES (1, 2);
INSERT INTO `sys_role_menu` VALUES (1, 3);
INSERT INTO `sys_role_menu` VALUES (1, 4);
INSERT INTO `sys_role_menu` VALUES (1, 5);
INSERT INTO `sys_role_menu` VALUES (1, 6);
INSERT INTO `sys_role_menu` VALUES (1, 7);
INSERT INTO `sys_role_menu` VALUES (1, 8);
INSERT INTO `sys_role_menu` VALUES (1, 9);
INSERT INTO `sys_role_menu` VALUES (1, 10);
INSERT INTO `sys_role_menu` VALUES (1, 11);
INSERT INTO `sys_role_menu` VALUES (1, 12);
INSERT INTO `sys_role_menu` VALUES (1, 13);
INSERT INTO `sys_role_menu` VALUES (1, 14);
INSERT INTO `sys_role_menu` VALUES (1, 15);
INSERT INTO `sys_role_menu` VALUES (1, 16);
INSERT INTO `sys_role_menu` VALUES (1, 17);
INSERT INTO `sys_role_menu` VALUES (1, 18);
INSERT INTO `sys_role_menu` VALUES (1, 19);
INSERT INTO `sys_role_menu` VALUES (1, 20);
INSERT INTO `sys_role_menu` VALUES (1, 22);
INSERT INTO `sys_role_menu` VALUES (1, 23);
INSERT INTO `sys_role_menu` VALUES (1, 24);
INSERT INTO `sys_role_menu` VALUES (1, 25);
INSERT INTO `sys_role_menu` VALUES (1, 26);
INSERT INTO `sys_role_menu` VALUES (1, 27);
INSERT INTO `sys_role_menu` VALUES (1, 28);
INSERT INTO `sys_role_menu` VALUES (1, 29);
INSERT INTO `sys_role_menu` VALUES (1, 30);
INSERT INTO `sys_role_menu` VALUES (1, 31);
INSERT INTO `sys_role_menu` VALUES (1, 32);
INSERT INTO `sys_role_menu` VALUES (1, 33);
INSERT INTO `sys_role_menu` VALUES (1, 34);
INSERT INTO `sys_role_menu` VALUES (1, 36);
INSERT INTO `sys_role_menu` VALUES (1, 37);
INSERT INTO `sys_role_menu` VALUES (1, 38);
INSERT INTO `sys_role_menu` VALUES (1, 39);
INSERT INTO `sys_role_menu` VALUES (1, 42);
INSERT INTO `sys_role_menu` VALUES (1, 44);
INSERT INTO `sys_role_menu` VALUES (1, 45);
INSERT INTO `sys_role_menu` VALUES (1, 47);
INSERT INTO `sys_role_menu` VALUES (1, 48);
INSERT INTO `sys_role_menu` VALUES (1, 49);
INSERT INTO `sys_role_menu` VALUES (1, 50);
INSERT INTO `sys_role_menu` VALUES (1, 51);
INSERT INTO `sys_role_menu` VALUES (1, 52);
INSERT INTO `sys_role_menu` VALUES (1, 53);
INSERT INTO `sys_role_menu` VALUES (1, 54);
INSERT INTO `sys_role_menu` VALUES (1, 55);
INSERT INTO `sys_role_menu` VALUES (1, 57);
INSERT INTO `sys_role_menu` VALUES (1, 59);
INSERT INTO `sys_role_menu` VALUES (1, 60);
INSERT INTO `sys_role_menu` VALUES (1, 61);
INSERT INTO `sys_role_menu` VALUES (2, 1);
INSERT INTO `sys_role_menu` VALUES (2, 2);
INSERT INTO `sys_role_menu` VALUES (2, 18);
INSERT INTO `sys_role_menu` VALUES (2, 22);
INSERT INTO `sys_role_menu` VALUES (2, 23);
INSERT INTO `sys_role_menu` VALUES (2, 24);
INSERT INTO `sys_role_menu` VALUES (2, 25);
INSERT INTO `sys_role_menu` VALUES (2, 26);
INSERT INTO `sys_role_menu` VALUES (2, 27);
INSERT INTO `sys_role_menu` VALUES (2, 28);
INSERT INTO `sys_role_menu` VALUES (2, 29);
INSERT INTO `sys_role_menu` VALUES (2, 30);
INSERT INTO `sys_role_menu` VALUES (2, 31);
INSERT INTO `sys_role_menu` VALUES (2, 32);
INSERT INTO `sys_role_menu` VALUES (2, 33);
INSERT INTO `sys_role_menu` VALUES (2, 34);
INSERT INTO `sys_role_menu` VALUES (2, 36);
INSERT INTO `sys_role_menu` VALUES (2, 37);
INSERT INTO `sys_role_menu` VALUES (2, 38);
INSERT INTO `sys_role_menu` VALUES (2, 39);
INSERT INTO `sys_role_menu` VALUES (2, 41);
INSERT INTO `sys_role_menu` VALUES (2, 42);
INSERT INTO `sys_role_menu` VALUES (2, 43);
INSERT INTO `sys_role_menu` VALUES (2, 44);
INSERT INTO `sys_role_menu` VALUES (2, 45);
INSERT INTO `sys_role_menu` VALUES (2, 47);
INSERT INTO `sys_role_menu` VALUES (2, 48);
INSERT INTO `sys_role_menu` VALUES (2, 49);
INSERT INTO `sys_role_menu` VALUES (2, 50);
INSERT INTO `sys_role_menu` VALUES (2, 51);
INSERT INTO `sys_role_menu` VALUES (2, 52);
INSERT INTO `sys_role_menu` VALUES (2, 53);
INSERT INTO `sys_role_menu` VALUES (2, 54);
INSERT INTO `sys_role_menu` VALUES (2, 55);

-- ----------------------------
-- Table structure for sys_user
-- ----------------------------
DROP TABLE IF EXISTS `sys_user`;
CREATE TABLE `sys_user`  (
  `user_id` bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '用户名',
  `password` char(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '密码',
  `nickname` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '昵称/姓名',
  `avatar` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '头像链接',
  `last_login_time` datetime(0) NULL DEFAULT NULL COMMENT '上次登录时间',
  `last_login_ip` varchar(40) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '上次登录IP',
  `email` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '邮箱',
  `remark` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '备注',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `status` tinyint(1) NULL DEFAULT 1 COMMENT '状态 0：禁用 1：正常',
  PRIMARY KEY (`user_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '管理系统-后台用户表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_user
-- ----------------------------
INSERT INTO `sys_user` VALUES (1, 'admin', '$2a$10$WvwXt6o6oyTzG4rbQ1uFUOo/y.xM6vt2uiQxiNCTMuMr9wGy3XaBS', '管理员', 'https://wuhuict.oss-cn-guangzhou.aliyuncs.com/1619097150960.jpg', '2021-11-10 20:58:52', '127.0.0.1', '1821997710@qq.com', '系统管理员aaa', '2021-03-21 20:49:36', '2021-03-21 20:49:38', 1);
INSERT INTO `sys_user` VALUES (2, 'test', '$2a$10$o/fox3aj9FfUuSWV1WXcDu6TY/j3aJ6AowOGr5A7yTSI.BBgSB99q', '测试用户', 'http://qqu1ruqfu.hn-bkt.clouddn.com//3ba99e0f20101eaa1e5ad60475e3540.jpg', '2021-03-21 12:52:19', '127.0.0.1', '21321321@163.com', '测试用户', '2021-03-21 12:52:07', '2021-03-21 12:52:10', 1);

-- ----------------------------
-- Table structure for sys_user_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_user_role`;
CREATE TABLE `sys_user_role`  (
  `user_id` bigint NOT NULL COMMENT '用户ID',
  `role_id` bigint NOT NULL COMMENT '角色ID',
  PRIMARY KEY (`user_id`, `role_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '用户和角色关联表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_user_role
-- ----------------------------
INSERT INTO `sys_user_role` VALUES (1, 1);
INSERT INTO `sys_user_role` VALUES (2, 2);

-- ----------------------------
-- Table structure for t_article
-- ----------------------------
DROP TABLE IF EXISTS `t_article`;
CREATE TABLE `t_article`  (
  `article_id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '标题',
  `summary` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '摘要',
  `html_content` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT 'html内容',
  `text_content` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT 'markdown内容',
  `article_face` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '封面地址',
  `type` tinyint NULL DEFAULT NULL COMMENT '1：原创 2：转载 3：翻译',
  `words` int NULL DEFAULT NULL COMMENT '文章字数',
  `views` int NULL DEFAULT NULL COMMENT '访问量',
  `recommend` bit(1) NULL DEFAULT b'0' COMMENT '开启推荐',
  `published` bit(1) NULL DEFAULT b'0' COMMENT '是否发布',
  `sort` tinyint NULL DEFAULT NULL COMMENT '排序评分',
  `author_id` bigint NULL DEFAULT NULL COMMENT '作者id',
  `class_id` bigint NULL DEFAULT NULL COMMENT '分类id',
  `status` tinyint NULL DEFAULT 1 COMMENT '审核状态 0：未过 1：等待 2：过',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间',
  PRIMARY KEY (`article_id`) USING BTREE,
  INDEX `aid_for_com`(`author_id`) USING BTREE,
  INDEX `cid_for_class`(`class_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 15 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_article
-- ----------------------------
INSERT INTO `t_article` VALUES (13, 'JUC中三个常用辅助工具类', '本文主要讲述JUC中三个常用辅助工具类 CountDownLatch、CyclicBarrier和Semaphore', '<h1 id=\"h1-juc-\"><a name=\"JUC中三个常用辅助工具类\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>JUC中三个常用辅助工具类</h1><h2 id=\"h2-1-countdownlatch\"><a name=\"1. CountDownLatch\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1. CountDownLatch</h2><h3 id=\"h3-u6982u8FF0\"><a name=\"概述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>概述</h3><p>CountDownLatch就像是一个向下计数的计数器，构造器参数传入这个计数器的初始值，即参与线程的数量，这个类主要有两个方法，分别是<code>await()</code>和<code>countDown()</code>。</p>\n<ul>\n<li>当一个或多个线程执行<code>await()</code>方法时，在CountDownLatch的计数值不为0时会被阻塞，在计数值为<strong>0</strong>时将会被唤醒，await()方法还有一个重载<code>await(long timeout, TimeUnit unit)</code>，这个方法在等待一段时间后计数值还不为0的话就会继续往下执行</li><li>当一个线程调用<code>countDown()</code>方法时会将计数值减一。（调用countDown方法的线程不会阻塞）</li></ul>\n<h3 id=\"h3-u57FAu672Cu4F7Fu7528\"><a name=\"基本使用\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>基本使用</h3><blockquote>\n<p>开启n个线程，在这n个线程执行完之后，主线程才能继续执行</p>\n</blockquote>\n<pre><code class=\"lang-java\">public class CountDownLatchDemo {\n    public static void main(String[] args) throws InterruptedException {\n        CountDownLatch countDownLatch = new CountDownLatch(8);\n        long start = System.currentTimeMillis();\n        for (int i = 1; i &lt;= 8; i++) {\n            int finalI = i;\n            new Thread(() -&gt; {\n                System.out.println(&quot;线程&quot; + finalI + &quot;执行&quot;);\n                try {\n                    TimeUnit.SECONDS.sleep(1);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                // 计数值减一\n                countDownLatch.countDown();\n            }, &quot;线程&quot; + i).start();\n        }\n        // 阻塞等待n个任务完成\n        countDownLatch.await();\n        long end = System.currentTimeMillis();\n        System.out.println(&quot;主线程结束, 用时:&quot; + (end - start));\n    }\n}\n</code></pre>\n<p>执行结果如下</p>\n<pre><code class=\"lang-bash\">线程1执行\n线程5执行\n线程4执行\n线程3执行\n线程2执行\n线程8执行\n线程7执行\n线程6执行\n主线程结束, 用时:1032\n</code></pre>\n<h2 id=\"h2-2-cyclicbarrier\"><a name=\"2. CyclicBarrier\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2. CyclicBarrier</h2><h3 id=\"h3-u6982u8FF0\"><a name=\"概述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>概述</h3><p>循环栅栏，与CountDownLatch相似，CyclicBarrier也类似一个计数器，但是它是向上计数，主要的构造方法如下</p>\n<pre><code class=\"lang-java\">/**\n * parties: 参与线程个数\n * barrierAction： 当所有线程到达一个屏障点时，优先执行barrierAction这个线程。\n */\npublic CyclicBarrier(int parties, Runnable barrierAction)\n</code></pre>\n<p>调用<code>await()</code>方法的线程告诉CyclicBarrier自己已经到达同步点，然后当前线程被阻塞。直到<code>parties</code>个参与线程调用了<code>await()</code>方法。</p>\n<h3 id=\"h3-u57FAu672Cu4F7Fu7528\"><a name=\"基本使用\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>基本使用</h3><blockquote>\n<p>寻找七颗龙珠，集齐时召唤神龙</p>\n</blockquote>\n<pre><code class=\"lang-java\">public class CyclicBarrierDemo {\n    public static void main(String[] args) {\n        CyclicBarrier cyclicBarrier = new CyclicBarrier(7, () -&gt; System.out.println(&quot;召唤神龙&quot;));\n        long start = System.currentTimeMillis();\n        for (int i = 1; i &lt;= 7; i++) {\n            int finalI = i;\n            new Thread(() -&gt; {\n                System.out.println(&quot;找到了第&quot; + finalI + &quot;颗龙珠&quot;);\n                try {\n                    try {\n                        TimeUnit.SECONDS.sleep(1);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    // 阻塞等待\n                    cyclicBarrier.await();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } catch (BrokenBarrierException e) {\n                    e.printStackTrace();\n                }\n            }, &quot;线程&quot; + i).start();\n        }\n        long end = System.currentTimeMillis();\n        System.out.println(&quot;主线程结束, 用时:&quot; + (end - start));\n    }\n}\n</code></pre>\n<p>结果如下</p>\n<pre><code class=\"lang-bash\">主线程结束, 用时:1\n找到了第4颗龙珠\n找到了第2颗龙珠\n找到了第1颗龙珠\n找到了第3颗龙珠\n找到了第7颗龙珠\n找到了第6颗龙珠\n找到了第5颗龙珠\n召唤神龙\n</code></pre>\n<h3 id=\"h3--countdownlatch-\"><a name=\"与CountDownLatch的差异\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>与CountDownLatch的差异</h3><ul>\n<li>CountDownLatch是一次性的，CyclicBarrier是可重复利用的（调用<code>reset()</code>方法）。</li><li>CountDownLatch会阻塞主线程，CyclicBarrier不会阻塞主线程，只会阻塞子线程。</li></ul>\n<h2 id=\"h2-3-semaphore\"><a name=\"3. Semaphore\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3. Semaphore</h2><h3 id=\"h3-u6982u8FF0\"><a name=\"概述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>概述</h3><p>信号量，Semaphore是一个计数信号量，它包含n个许可证，提供方法<code>acquire()</code>来让线程获取许可证和<code>release()</code>来让线程归还许可证，只有当Semaphore中的计数信号量还大于0时<code>acquire()</code>方法才能够获得许可证，否则会让调用的线程阻塞等待，在取得许可证后Semaphore的计数信号量减一。反之<code>release()</code>方法在归还许可证后会使计数信号量加一。当信号量使用完时，必须释放！！！</p>\n<ul>\n<li>信号量主要用于两个目的，一个是用于多个共享资源的互斥使用，一个是用于并发线程数的控制。</li></ul>\n<h3 id=\"h3-u57FAu672Cu4F7Fu7528\"><a name=\"基本使用\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>基本使用</h3><blockquote>\n<p>模拟停车，有车位时停车，没有则等待</p>\n</blockquote>\n<pre><code class=\"lang-java\">public class SemaphoreDemo {\n    public static void main(String[] args) {\n        // 模拟有三个停车位\n        Semaphore semaphore = new Semaphore(3);\n        // 7辆车来争车位\n        for (int i = 1; i &lt;= 7; i++) {\n            int finalI = i;\n            new Thread(() -&gt; {\n                try {\n                    // 获取许可证\n                    semaphore.acquire();\n                    System.out.println(&quot;线程&quot; + finalI + &quot;停车&quot;);\n                    try {\n                        TimeUnit.SECONDS.sleep(2);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } finally {\n                    // 归还许可证\n                    semaphore.release();\n                }\n            }, &quot;线程&quot; + i).start();\n        }\n    }\n}\n</code></pre>\n<p>结果如下：程序运行时可以看到一次只打印3个</p>\n<pre><code class=\"lang-bash\">线程1停车\n线程3停车\n线程2停车\n线程4停车\n线程6停车\n线程5停车\n线程7停车\n</code></pre>\n<h2 id=\"h2-u7EC3u4E60\"><a name=\"练习\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>练习</h2><h3 id=\"h3-u6309u5E8Fu6253u5370\"><a name=\"按序打印\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span><a href=\"https://leetcode-cn.com/problems/print-in-order/\">按序打印</a></h3><blockquote>\n<p>力扣：<a href=\"https://leetcode-cn.com/problems/print-in-order/\">https://leetcode-cn.com/problems/print-in-order/</a></p>\n</blockquote>\n<p>有如下代码，三个不同的线程将会共用一个 Exp01实例。一个将会调用 first() 方法，一个将会调用 second() 方法<br>还有一个将会调用 third() 方法，请设计修改程序，以确保 second() 方法在 first() 方法之后被执行，third() 方法在 second() 方法之后被执行。</p>\n<pre><code class=\"lang-java\">public class Exp01 {\n\n    public Exp01() {\n    }\n\n    public void first(Runnable printFirst) throws InterruptedException {\n\n        // printFirst.run() outputs &quot;first&quot;. Do not change or remove this line.\n        printFirst.run();\n    }\n\n    public void second(Runnable printSecond) throws InterruptedException {\n\n        // printSecond.run() outputs &quot;second&quot;. Do not change or remove this line.\n        printSecond.run();\n    }\n\n    public void third(Runnable printThird) throws InterruptedException {\n\n        // printThird.run() outputs &quot;third&quot;. Do not change or remove this line.\n        printThird.run();\n    }\n\n}\n\n\nclass Print {\n\n    public Runnable f1;\n    public Runnable f2;\n    public Runnable f3;\n\n    public Print() {\n        this.f1 = () -&gt; System.out.println(&quot;first&quot;);\n        this.f2 = () -&gt; System.out.println(&quot;second&quot;);\n        this.f3 = () -&gt; System.out.println(&quot;third&quot;);\n    }\n\n    public static void main(String[] args)  {\n        Print print = new Print();\n        Exp01 exp01 = new Exp01();\n        CompletableFuture.runAsync(() -&gt; {\n            try {\n                // 打印third\n                exp01.third(print.f3);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        CompletableFuture.runAsync(() -&gt; {\n            try {\n                // 打印first\n                exp01.first(print.f1);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        CompletableFuture.runAsync(() -&gt; {\n            try {\n                // 打印second\n                exp01.second(print.f2);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n    }\n\n}\n</code></pre>\n<p>打印大部分时间都是</p>\n<pre><code class=\"lang-java\">third\nfirst\nsecond\n</code></pre>\n<blockquote>\n<p> 要求是控制打印顺序为first second third</p>\n</blockquote>\n<h4 id=\"h4--countdownlatch\"><a name=\"使用CountDownLatch\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>使用CountDownLatch</h4><pre><code class=\"lang-java\">public class Exp01 {\n\n    CountDownLatch two = new CountDownLatch(1);\n    CountDownLatch three = new CountDownLatch(1);\n\n    public Exp01() {\n    }\n\n    public void first(Runnable printFirst) throws InterruptedException {\n\n        // printFirst.run() outputs &quot;first&quot;. Do not change or remove this line.\n        printFirst.run(); // 打印\n        two.countDown(); // 打印完后tow减为0， second开始打印\n    }\n\n    public void second(Runnable printSecond) throws InterruptedException {\n        two.await(); //阻塞等待two为0\n        // printSecond.run() outputs &quot;second&quot;. Do not change or remove this line.\n        printSecond.run();\n        three.countDown();\n    }\n\n    public void third(Runnable printThird) throws InterruptedException {\n        three.await();\n        // printThird.run() outputs &quot;third&quot;. Do not change or remove this line.\n        printThird.run();\n    }\n}\n</code></pre>\n<h4 id=\"h4--semaphore\"><a name=\"使用Semaphore\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>使用Semaphore</h4><pre><code class=\"lang-java\">public class Exp01 {\n\n    Semaphore two = new Semaphore(0);\n    Semaphore three = new Semaphore(0);\n\n    public Exp01() {\n    }\n\n    public void first(Runnable printFirst) throws InterruptedException {\n\n        // printFirst.run() outputs &quot;first&quot;. Do not change or remove this line.\n        printFirst.run();\n        two.release(); // tow + 1\n    }\n\n    public void second(Runnable printSecond) throws InterruptedException {\n        two.acquire(); // two为0时一直阻塞\n        // printSecond.run() outputs &quot;second&quot;. Do not change or remove this line.\n        printSecond.run();\n        three.release(); // three + 1\n    }\n\n    public void third(Runnable printThird) throws InterruptedException {\n        three.acquire(); // three为0时一直阻塞\n        // printThird.run() outputs &quot;third&quot;. Do not change or remove this line.\n        printThird.run();\n    }\n\n}\n</code></pre>\n<h3 id=\"h3--foobar\"><a name=\"交替打印FooBar\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span><a href=\"https://leetcode-cn.com/problems/print-foobar-alternately/\"> 交替打印FooBar</a></h3><p>有如下代码，两个不同的线程将会共用一个 Exp02实例。其中一个线程将会调用 foo() 方法，另一个线程将会调用 bar() 方法。</p>\n<p>请设计修改程序，以确保 “foobar” 被输出 n 次。</p>\n<pre><code class=\"lang-java\">public class Exp02 {\n\n    private int n;    \n\n    public Exp02(int n) {\n        this.n = n;\n    }\n\n    public void foo(Runnable printFoo) throws InterruptedException {\n\n        for (int i = 0; i &lt; n; i++) {\n\n            // printFoo.run() outputs &quot;foo&quot;. Do not change or remove this line.\n            printFoo.run();\n        }\n    }\n\n    public void bar(Runnable printBar) throws InterruptedException {\n\n        for (int i = 0; i &lt; n; i++) {\n\n            // printBar.run() outputs &quot;bar&quot;. Do not change or remove this line.\n            printBar.run();\n        }\n    }\n}\n\nclass Print02 {\n\n    public Runnable f1;\n    public Runnable f2;\n\n    public Print02() {\n        this.f1 = () -&gt; System.out.println(&quot;foo&quot;);\n        this.f2 = () -&gt; System.out.println(&quot;bar&quot;);\n    }\n\n    public static void main(String[] args) throws InterruptedException, ExecutionException {\n        Print02 print = new Print02();\n        Exp02 exp02 = new Exp02(7);\n        CompletableFuture&lt;Void&gt; task01 = CompletableFuture.runAsync(() -&gt; {\n            try {\n                // 打印third\n                exp02.foo(print.f1);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        CompletableFuture&lt;Void&gt; task02 = CompletableFuture.runAsync(() -&gt; {\n            try {\n                // 打印first\n                exp02.bar(print.f2);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        // 等待两个异步任务完成\n        CompletableFuture.allOf(task01, task02).get();\n    }\n}\n</code></pre>\n<h4 id=\"h4--semaphore\"><a name=\"使用Semaphore\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>使用Semaphore</h4><pre><code class=\"lang-java\">public class Exp02 {\n\n    private int n;\n\n    private Semaphore foo = new Semaphore(1);\n    private Semaphore bar = new Semaphore(0);\n\n\n    public Exp02(int n) {\n        this.n = n;\n    }\n\n    public void foo(Runnable printFoo) throws InterruptedException {\n\n        for (int i = 0; i &lt; n; i++) {\n            foo.acquire(); // 初始值为1， 可以获取到， 获取到后foo - 1\n            // printFoo.run() outputs &quot;foo&quot;. Do not change or remove this line.\n            printFoo.run();\n            bar.release(); // bar 信号量 + 1\n        }\n    }\n\n    public void bar(Runnable printBar) throws InterruptedException {\n\n        for (int i = 0; i &lt; n; i++) {\n            bar.acquire(); // 一开始为0， 要等待foo打印完 + 1 后才能获得信号量\n            // printBar.run() outputs &quot;bar&quot;. Do not change or remove this line.\n            printBar.run();\n            foo.release(); // 打印完释放foo的信号量 foo + 1\n        }\n    }\n}\n</code></pre>\n<h4 id=\"h4--cyclicbarrier\"><a name=\"使用CyclicBarrier\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>使用CyclicBarrier</h4><pre><code class=\"lang-java\">public class Exp02 {\n\n    private int n;\n\n    private CyclicBarrier cyclicBarrier = new CyclicBarrier(2);\n\n    /**\n     * 声明共享可见变量\n     */\n    private volatile boolean flag = true;\n\n    public Exp02(int n) {\n        this.n = n;\n    }\n\n    public void foo(Runnable printFoo) throws InterruptedException {\n\n        for (int i = 0; i &lt; n; i++) {\n            while (!flag) {} // flag 为false时bar线程在工作中\n            printFoo.run();\n            flag = false; // 修改可见变量为false， 等待bar线程修改为true后再工作\n            try {\n                cyclicBarrier.await(); // 到达屏障\n            } catch (BrokenBarrierException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public void bar(Runnable printBar) throws InterruptedException {\n\n        for (int i = 0; i &lt; n; i++) {\n            try {\n                cyclicBarrier.await(); // 等待foo打印线程到达屏障\n            } catch (BrokenBarrierException e) {\n                e.printStackTrace();\n            }\n            printBar.run();\n            flag = true; // 修改可见变量为true， foo线程继续打印\n        }\n    }\n}\n</code></pre>\n<h3 id=\"h3-u6253u5370u96F6u4E0Eu5947u5076u6570\"><a name=\"打印零与奇偶数\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span><a href=\"https://leetcode-cn.com/problems/print-zero-even-odd/\">打印零与奇偶数</a></h3><blockquote>\n<p>力扣：<a href=\"https://leetcode-cn.com/problems/print-zero-even-odd/\">https://leetcode-cn.com/problems/print-zero-even-odd/</a></p>\n</blockquote>\n<p>有以下代码,相同的一个 ZeroEvenOdd 类实例将会传递给三个不同的线程：</p>\n<p>线程 A 将调用 zero()，它只输出 0 。<br>线程 B 将调用 even()，它只输出偶数。<br>线程 C 将调用 odd()，它只输出奇数。<br>每个线程都有一个 printNumber 方法来输出一个整数。请修改给出的代码以输出整数序列 010203040506… ，其中序列的长度必须为 2n。</p>\n<pre><code class=\"lang-java\">public class Exp03 {\n    private int n;\n\n    public Exp03(int n) {\n        this.n = n;\n    }\n\n    // printNumber.accept(x) outputs &quot;x&quot;, where x is an integer.\n    public void zero(IntConsumer printNumber) throws InterruptedException {\n\n    }\n\n    public void even(IntConsumer printNumber) throws InterruptedException {\n\n    }\n\n    public void odd(IntConsumer printNumber) throws InterruptedException {\n\n    }\n}\n\nclass Print03 {\n\n    public IntConsumer consumer;\n\n    public Print03() {\n        this.consumer = x -&gt; System.out.println(x);\n    }\n\n    public static void main(String[] args) {\n        Exp03 exp03 = new Exp03(7);\n        Print03 print03 = new Print03();\n        // 执行异步任务\n        ExecutorService executorService = Executors.newFixedThreadPool(3);\n        CompletableFuture.runAsync(() -&gt; {\n            try {\n                // 打印0\n                exp03.zero(print03.consumer);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }, executorService);\n        CompletableFuture.runAsync(() -&gt; {\n            try {\n                // 打印奇数\n                exp03.odd(print03.consumer);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }, executorService);\n        CompletableFuture.runAsync(() -&gt; {\n            try {\n                // 打印偶数\n                exp03.even(print03.consumer);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }, executorService);\n    }\n}\n</code></pre>\n<h4 id=\"h4--semaphore\"><a name=\"使用Semaphore\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>使用Semaphore</h4><pre><code class=\"lang-java\">public class Exp03 {\n\n    private int n;\n\n    private Semaphore zero = new Semaphore(1);\n    private Semaphore odd = new Semaphore(0);\n    private Semaphore even = new Semaphore(0);\n\n    public Exp03(int n) {\n        this.n = n;\n    }\n\n    // printNumber.accept(x) outputs &quot;x&quot;, where x is an integer.\n    public void zero(IntConsumer printNumber) throws InterruptedException {\n\n        for(int i = 1; i &lt;= n; i++) {\n            zero.acquire(); // zero初始值为1， 可以获取到信号量\n            printNumber.accept(0); // 打印0\n            if(i % 2 == 0) {\n                even.release();\n            } else {\n                odd.release();\n            }\n        }\n\n    }\n\n    public void even(IntConsumer printNumber) throws InterruptedException {\n        for(int i = 1; i &lt;= n; i++) {\n            if(i % 2 == 0) {\n                even.acquire(); // 进来后一直阻塞， 直到zero方法里面释放信号量\n                printNumber.accept(i);\n                zero.release();\n            }\n        }\n    }\n\n    public void odd(IntConsumer printNumber) throws InterruptedException {\n        for(int i = 1; i &lt;= n; i++) {\n            if(i % 2 != 0) {\n                odd.acquire(); // 进来后一直阻塞， 直到zero方法里面释放信号量\n                printNumber.accept(i);\n                zero.release();\n            }\n        }\n    }\n}\n</code></pre>\n', '\n\n\n\n# JUC中三个常用辅助工具类\n\n## 1. CountDownLatch\n\n### 概述\n\nCountDownLatch就像是一个向下计数的计数器，构造器参数传入这个计数器的初始值，即参与线程的数量，这个类主要有两个方法，分别是`await()`和`countDown()`。\n\n* 当一个或多个线程执行`await()`方法时，在CountDownLatch的计数值不为0时会被阻塞，在计数值为**0**时将会被唤醒，await()方法还有一个重载`await(long timeout, TimeUnit unit)`，这个方法在等待一段时间后计数值还不为0的话就会继续往下执行\n* 当一个线程调用`countDown()`方法时会将计数值减一。（调用countDown方法的线程不会阻塞）\n\n### 基本使用\n\n> 开启n个线程，在这n个线程执行完之后，主线程才能继续执行\n\n``` java\npublic class CountDownLatchDemo {\n    public static void main(String[] args) throws InterruptedException {\n        CountDownLatch countDownLatch = new CountDownLatch(8);\n        long start = System.currentTimeMillis();\n        for (int i = 1; i <= 8; i++) {\n            int finalI = i;\n            new Thread(() -> {\n                System.out.println(\"线程\" + finalI + \"执行\");\n                try {\n                    TimeUnit.SECONDS.sleep(1);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                // 计数值减一\n                countDownLatch.countDown();\n            }, \"线程\" + i).start();\n        }\n        // 阻塞等待n个任务完成\n        countDownLatch.await();\n        long end = System.currentTimeMillis();\n        System.out.println(\"主线程结束, 用时:\" + (end - start));\n    }\n}\n```\n\n执行结果如下\n\n``` bash\n线程1执行\n线程5执行\n线程4执行\n线程3执行\n线程2执行\n线程8执行\n线程7执行\n线程6执行\n主线程结束, 用时:1032\n```\n\n## 2. CyclicBarrier\n\n### 概述\n\n循环栅栏，与CountDownLatch相似，CyclicBarrier也类似一个计数器，但是它是向上计数，主要的构造方法如下\n\n``` java\n/**\n * parties: 参与线程个数\n * barrierAction： 当所有线程到达一个屏障点时，优先执行barrierAction这个线程。\n */\npublic CyclicBarrier(int parties, Runnable barrierAction)\n```\n\n调用`await()`方法的线程告诉CyclicBarrier自己已经到达同步点，然后当前线程被阻塞。直到`parties`个参与线程调用了`await()`方法。\n\n### 基本使用\n\n> 寻找七颗龙珠，集齐时召唤神龙\n\n``` java\npublic class CyclicBarrierDemo {\n    public static void main(String[] args) {\n        CyclicBarrier cyclicBarrier = new CyclicBarrier(7, () -> System.out.println(\"召唤神龙\"));\n        long start = System.currentTimeMillis();\n        for (int i = 1; i <= 7; i++) {\n            int finalI = i;\n            new Thread(() -> {\n                System.out.println(\"找到了第\" + finalI + \"颗龙珠\");\n                try {\n                    try {\n                        TimeUnit.SECONDS.sleep(1);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    // 阻塞等待\n                    cyclicBarrier.await();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } catch (BrokenBarrierException e) {\n                    e.printStackTrace();\n                }\n            }, \"线程\" + i).start();\n        }\n        long end = System.currentTimeMillis();\n        System.out.println(\"主线程结束, 用时:\" + (end - start));\n    }\n}\n\n```\n\n结果如下\n\n``` bash\n主线程结束, 用时:1\n找到了第4颗龙珠\n找到了第2颗龙珠\n找到了第1颗龙珠\n找到了第3颗龙珠\n找到了第7颗龙珠\n找到了第6颗龙珠\n找到了第5颗龙珠\n召唤神龙\n```\n\n### 与CountDownLatch的差异\n\n* CountDownLatch是一次性的，CyclicBarrier是可重复利用的（调用`reset()`方法）。\n* CountDownLatch会阻塞主线程，CyclicBarrier不会阻塞主线程，只会阻塞子线程。\n\n## 3. Semaphore\n\n### 概述\n\n信号量，Semaphore是一个计数信号量，它包含n个许可证，提供方法`acquire()`来让线程获取许可证和`release()`来让线程归还许可证，只有当Semaphore中的计数信号量还大于0时`acquire()`方法才能够获得许可证，否则会让调用的线程阻塞等待，在取得许可证后Semaphore的计数信号量减一。反之`release()`方法在归还许可证后会使计数信号量加一。当信号量使用完时，必须释放！！！\n\n* 信号量主要用于两个目的，一个是用于多个共享资源的互斥使用，一个是用于并发线程数的控制。\n\n### 基本使用\n\n> 模拟停车，有车位时停车，没有则等待\n\n``` java\npublic class SemaphoreDemo {\n    public static void main(String[] args) {\n        // 模拟有三个停车位\n        Semaphore semaphore = new Semaphore(3);\n        // 7辆车来争车位\n        for (int i = 1; i <= 7; i++) {\n            int finalI = i;\n            new Thread(() -> {\n                try {\n                    // 获取许可证\n                    semaphore.acquire();\n                    System.out.println(\"线程\" + finalI + \"停车\");\n                    try {\n                        TimeUnit.SECONDS.sleep(2);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } finally {\n                    // 归还许可证\n                    semaphore.release();\n                }\n            }, \"线程\" + i).start();\n        }\n    }\n}\n```\n\n结果如下：程序运行时可以看到一次只打印3个\n\n``` bash\n线程1停车\n线程3停车\n线程2停车\n线程4停车\n线程6停车\n线程5停车\n线程7停车\n```\n\n## 练习\n\n### [按序打印](https://leetcode-cn.com/problems/print-in-order/)\n\n> 力扣：https://leetcode-cn.com/problems/print-in-order/\n\n有如下代码，三个不同的线程将会共用一个 Exp01实例。一个将会调用 first() 方法，一个将会调用 second() 方法\n还有一个将会调用 third() 方法，请设计修改程序，以确保 second() 方法在 first() 方法之后被执行，third() 方法在 second() 方法之后被执行。\n\n``` java\npublic class Exp01 {\n\n    public Exp01() {\n    }\n\n    public void first(Runnable printFirst) throws InterruptedException {\n\n        // printFirst.run() outputs \"first\". Do not change or remove this line.\n        printFirst.run();\n    }\n\n    public void second(Runnable printSecond) throws InterruptedException {\n\n        // printSecond.run() outputs \"second\". Do not change or remove this line.\n        printSecond.run();\n    }\n\n    public void third(Runnable printThird) throws InterruptedException {\n\n        // printThird.run() outputs \"third\". Do not change or remove this line.\n        printThird.run();\n    }\n    \n}\n\n\nclass Print {\n    \n    public Runnable f1;\n    public Runnable f2;\n    public Runnable f3;\n\n    public Print() {\n        this.f1 = () -> System.out.println(\"first\");\n        this.f2 = () -> System.out.println(\"second\");\n        this.f3 = () -> System.out.println(\"third\");\n    }\n    \n    public static void main(String[] args)  {\n        Print print = new Print();\n        Exp01 exp01 = new Exp01();\n        CompletableFuture.runAsync(() -> {\n            try {\n                // 打印third\n                exp01.third(print.f3);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        CompletableFuture.runAsync(() -> {\n            try {\n                // 打印first\n                exp01.first(print.f1);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        CompletableFuture.runAsync(() -> {\n            try {\n                // 打印second\n                exp01.second(print.f2);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n    }\n    \n}\n```\n\n打印大部分时间都是\n\n``` java\nthird\nfirst\nsecond\n```\n\n>  要求是控制打印顺序为first second third\n\n#### 使用CountDownLatch\n\n``` java\npublic class Exp01 {\n\n    CountDownLatch two = new CountDownLatch(1);\n    CountDownLatch three = new CountDownLatch(1);\n\n    public Exp01() {\n    }\n\n    public void first(Runnable printFirst) throws InterruptedException {\n\n        // printFirst.run() outputs \"first\". Do not change or remove this line.\n        printFirst.run(); // 打印\n        two.countDown(); // 打印完后tow减为0， second开始打印\n    }\n\n    public void second(Runnable printSecond) throws InterruptedException {\n        two.await(); //阻塞等待two为0\n        // printSecond.run() outputs \"second\". Do not change or remove this line.\n        printSecond.run();\n        three.countDown();\n    }\n\n    public void third(Runnable printThird) throws InterruptedException {\n        three.await();\n        // printThird.run() outputs \"third\". Do not change or remove this line.\n        printThird.run();\n    }\n}\n```\n\n#### 使用Semaphore\n\n``` java\npublic class Exp01 {\n\n    Semaphore two = new Semaphore(0);\n    Semaphore three = new Semaphore(0);\n\n    public Exp01() {\n    }\n\n    public void first(Runnable printFirst) throws InterruptedException {\n\n        // printFirst.run() outputs \"first\". Do not change or remove this line.\n        printFirst.run();\n        two.release(); // tow + 1\n    }\n\n    public void second(Runnable printSecond) throws InterruptedException {\n        two.acquire(); // two为0时一直阻塞\n        // printSecond.run() outputs \"second\". Do not change or remove this line.\n        printSecond.run();\n        three.release(); // three + 1\n    }\n\n    public void third(Runnable printThird) throws InterruptedException {\n        three.acquire(); // three为0时一直阻塞\n        // printThird.run() outputs \"third\". Do not change or remove this line.\n        printThird.run();\n    }\n    \n}\n```\n\n### [ 交替打印FooBar](https://leetcode-cn.com/problems/print-foobar-alternately/)\n\n有如下代码，两个不同的线程将会共用一个 Exp02实例。其中一个线程将会调用 foo() 方法，另一个线程将会调用 bar() 方法。\n\n请设计修改程序，以确保 \"foobar\" 被输出 n 次。\n\n``` java\npublic class Exp02 {\n\n    private int n;    \n\n    public Exp02(int n) {\n        this.n = n;\n    }\n\n    public void foo(Runnable printFoo) throws InterruptedException {\n\n        for (int i = 0; i < n; i++) {\n\n            // printFoo.run() outputs \"foo\". Do not change or remove this line.\n            printFoo.run();\n        }\n    }\n\n    public void bar(Runnable printBar) throws InterruptedException {\n\n        for (int i = 0; i < n; i++) {\n\n            // printBar.run() outputs \"bar\". Do not change or remove this line.\n            printBar.run();\n        }\n    }\n}\n\nclass Print02 {\n\n    public Runnable f1;\n    public Runnable f2;\n\n    public Print02() {\n        this.f1 = () -> System.out.println(\"foo\");\n        this.f2 = () -> System.out.println(\"bar\");\n    }\n\n    public static void main(String[] args) throws InterruptedException, ExecutionException {\n        Print02 print = new Print02();\n        Exp02 exp02 = new Exp02(7);\n        CompletableFuture<Void> task01 = CompletableFuture.runAsync(() -> {\n            try {\n                // 打印third\n                exp02.foo(print.f1);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        CompletableFuture<Void> task02 = CompletableFuture.runAsync(() -> {\n            try {\n                // 打印first\n                exp02.bar(print.f2);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        });\n        // 等待两个异步任务完成\n        CompletableFuture.allOf(task01, task02).get();\n    }\n}\n```\n\n\n\n#### 使用Semaphore\n\n``` java\npublic class Exp02 {\n\n    private int n;\n\n    private Semaphore foo = new Semaphore(1);\n    private Semaphore bar = new Semaphore(0);\n\n\n    public Exp02(int n) {\n        this.n = n;\n    }\n\n    public void foo(Runnable printFoo) throws InterruptedException {\n\n        for (int i = 0; i < n; i++) {\n            foo.acquire(); // 初始值为1， 可以获取到， 获取到后foo - 1\n            // printFoo.run() outputs \"foo\". Do not change or remove this line.\n            printFoo.run();\n            bar.release(); // bar 信号量 + 1\n        }\n    }\n\n    public void bar(Runnable printBar) throws InterruptedException {\n\n        for (int i = 0; i < n; i++) {\n            bar.acquire(); // 一开始为0， 要等待foo打印完 + 1 后才能获得信号量\n            // printBar.run() outputs \"bar\". Do not change or remove this line.\n            printBar.run();\n            foo.release(); // 打印完释放foo的信号量 foo + 1\n        }\n    }\n}\n```\n\n\n\n#### 使用CyclicBarrier\n\n``` java\npublic class Exp02 {\n\n    private int n;\n\n    private CyclicBarrier cyclicBarrier = new CyclicBarrier(2);\n\n    /**\n     * 声明共享可见变量\n     */\n    private volatile boolean flag = true;\n\n    public Exp02(int n) {\n        this.n = n;\n    }\n\n    public void foo(Runnable printFoo) throws InterruptedException {\n\n        for (int i = 0; i < n; i++) {\n            while (!flag) {} // flag 为false时bar线程在工作中\n            printFoo.run();\n            flag = false; // 修改可见变量为false， 等待bar线程修改为true后再工作\n            try {\n                cyclicBarrier.await(); // 到达屏障\n            } catch (BrokenBarrierException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public void bar(Runnable printBar) throws InterruptedException {\n\n        for (int i = 0; i < n; i++) {\n            try {\n                cyclicBarrier.await(); // 等待foo打印线程到达屏障\n            } catch (BrokenBarrierException e) {\n                e.printStackTrace();\n            }\n            printBar.run();\n            flag = true; // 修改可见变量为true， foo线程继续打印\n        }\n    }\n}\n```\n\n### [打印零与奇偶数](https://leetcode-cn.com/problems/print-zero-even-odd/)\n\n> 力扣：https://leetcode-cn.com/problems/print-zero-even-odd/\n\n有以下代码,相同的一个 ZeroEvenOdd 类实例将会传递给三个不同的线程：\n\n线程 A 将调用 zero()，它只输出 0 。\n线程 B 将调用 even()，它只输出偶数。\n线程 C 将调用 odd()，它只输出奇数。\n每个线程都有一个 printNumber 方法来输出一个整数。请修改给出的代码以输出整数序列 010203040506... ，其中序列的长度必须为 2n。\n\n``` java\npublic class Exp03 {\n    private int n;\n\n    public Exp03(int n) {\n        this.n = n;\n    }\n\n    // printNumber.accept(x) outputs \"x\", where x is an integer.\n    public void zero(IntConsumer printNumber) throws InterruptedException {\n\n    }\n\n    public void even(IntConsumer printNumber) throws InterruptedException {\n\n    }\n\n    public void odd(IntConsumer printNumber) throws InterruptedException {\n\n    }\n}\n\nclass Print03 {\n    \n    public IntConsumer consumer;\n\n    public Print03() {\n        this.consumer = x -> System.out.println(x);\n    }\n\n    public static void main(String[] args) {\n        Exp03 exp03 = new Exp03(7);\n        Print03 print03 = new Print03();\n        // 执行异步任务\n        ExecutorService executorService = Executors.newFixedThreadPool(3);\n        CompletableFuture.runAsync(() -> {\n            try {\n                // 打印0\n                exp03.zero(print03.consumer);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }, executorService);\n        CompletableFuture.runAsync(() -> {\n            try {\n                // 打印奇数\n                exp03.odd(print03.consumer);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }, executorService);\n        CompletableFuture.runAsync(() -> {\n            try {\n                // 打印偶数\n                exp03.even(print03.consumer);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }, executorService);\n    }\n}\n\n```\n\n#### 使用Semaphore\n\n``` java\npublic class Exp03 {\n\n    private int n;\n\n    private Semaphore zero = new Semaphore(1);\n    private Semaphore odd = new Semaphore(0);\n    private Semaphore even = new Semaphore(0);\n\n    public Exp03(int n) {\n        this.n = n;\n    }\n\n    // printNumber.accept(x) outputs \"x\", where x is an integer.\n    public void zero(IntConsumer printNumber) throws InterruptedException {\n\n        for(int i = 1; i <= n; i++) {\n            zero.acquire(); // zero初始值为1， 可以获取到信号量\n            printNumber.accept(0); // 打印0\n            if(i % 2 == 0) {\n                even.release();\n            } else {\n                odd.release();\n            }\n        }\n\n    }\n\n    public void even(IntConsumer printNumber) throws InterruptedException {\n        for(int i = 1; i <= n; i++) {\n            if(i % 2 == 0) {\n                even.acquire(); // 进来后一直阻塞， 直到zero方法里面释放信号量\n                printNumber.accept(i);\n                zero.release();\n            }\n        }\n    }\n\n    public void odd(IntConsumer printNumber) throws InterruptedException {\n        for(int i = 1; i <= n; i++) {\n            if(i % 2 != 0) {\n                odd.acquire(); // 进来后一直阻塞， 直到zero方法里面释放信号量\n                printNumber.accept(i);\n                zero.release();\n            }\n        }\n    }\n}\n```', 'https://i.loli.net/2021/11/06/gKjbIvmUqTip8sr.jpg', 1, 2522, 70, b'0', b'1', 3, 1, 1, 2, '2021-11-06 15:36:13', '2021-11-09 14:35:50');
INSERT INTO `t_article` VALUES (14, '代码样式测试', '试试看各种代码的显示样式', '<h1 id=\"h1-u4EE3u7801u6837u5F0F\"><a name=\"代码样式\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>代码样式</h1><h2 id=\"h2-cpp\"><a name=\"CPP\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>CPP</h2><pre><code class=\"lang-cpp\">#include &lt;iostream&gt; //数据输入输出流\n#include &lt;cstdio&gt;\ntypedef long long ll;\nusing namespace std;\n\nconst int MAXN = 1000001;\nll n, m, a[MAXN], ans[MAXN &lt;&lt; 2], tag[MAXN &lt;&lt; 2];\n\ninline ll ls(ll x)\n{\n    return x &lt;&lt; 1;\n}\n\ninline ll rs(ll x)\n{\n    return x &lt;&lt; 1 | 1;\n}\n\ninline void push_up(ll p)\n{\n    ans[p] = ans[ls(p)] + ans[rs(p)];\n}\n\nvoid build(ll p, ll l, ll r)\n{\n    tag[p] = 0;\n    if (l == r)\n    {\n        ans[p] = a[l];\n        return;\n    }\n    ll mid = (l + r) &gt;&gt; 1;\n    build(ls(p), l, mid);\n    build(rs(p), mid + 1, r);\n    push_up(p);\n}\n\ninline void f(ll p, ll l, ll r, ll k)\n{\n    tag[p] += k;\n    ans[p] += k * (r - l + 1);\n}\n\ninline void push_down(ll p, ll l, ll r)\n{\n    ll mid = (l + r) &gt;&gt; 1;\n    f(ls(p), l, mid, tag[p]);\n    f(rs(p), mid + 1, r, tag[p]);\n    tag[p] = 0;\n}\n\ninline void update(ll nl, ll nr, ll l, ll r, ll p, ll k)\n{\n    if (nl &lt;= l &amp;&amp; r &lt;= nr)\n    {\n        // ans[p] += k * (r - l + 1);\n        // tag[p] += k;\n        f(p, l, r, k);\n        return;\n    }\n    push_down(p, l, r);\n    ll mid = (l + r) &gt;&gt; 1;\n    if (nl &lt;= mid)\n    {\n        update(nl, nr, l, mid, ls(p), k);\n    }\n    if (nr &gt; mid)\n    {\n        update(nl, nr, mid + 1, r, rs(p), k);\n    }\n    push_up(p);\n}\n\nll query(ll q_x, ll q_y, ll l, ll r, ll p)\n{\n    ll res = 0;\n    if (q_x &lt;= l &amp;&amp; r &lt;= q_y)\n    {\n        return ans[p];\n    }\n    ll mid = (l + r) &gt;&gt; 1;\n    push_down(p, l, r);\n    if (q_x &lt;= mid)\n    {\n        res += query(q_x, q_y, l, mid, ls(p));\n    }\n    if (q_y &gt; mid)\n    {\n        res += query(q_x, q_y, mid + 1, r, rs(p));\n    }\n    return res;\n}\n\nint main(void)\n{\n    ll a1, b, c, d, e, f;\n    scanf(&quot;%lld%lld&quot;, &amp;n, &amp;m);\n    for (ll i = 1; i &lt;= n; i++)\n    {\n        scanf(&quot;%lld&quot;, &amp;a[i]);\n    }\n    build(1, 1, n);\n    while (m--)\n    {\n        scanf(&quot;%lld&quot;, &amp;a1);\n        switch (a1)\n        {\n            case 1:\n            {\n                scanf(&quot;%lld%lld%lld&quot;, &amp;b, &amp;c, &amp;d);\n                update(b, c, 1, n, 1, d);\n                break;\n            }\n            case 2:\n            {\n                scanf(&quot;%lld%lld&quot;, &amp;e, &amp;f);\n                printf(&quot;%lld\\n&quot;, query(e, f, 1, n, 1));\n                break;\n            }\n            default:\n                break;\n        }\n    }\n    return 0;\n}\n</code></pre>\n<h2 id=\"h2-java\"><a name=\"Java\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>Java</h2><pre><code class=\"lang-java\">package com.tao.chat;\n\nimport com.tao.chat.handler.WebSocketChatHandler;\nimport io.netty.bootstrap.ServerBootstrap;\nimport io.netty.channel.*;\nimport io.netty.channel.nio.NioEventLoopGroup;\nimport io.netty.channel.socket.SocketChannel;\nimport io.netty.channel.socket.nio.NioServerSocketChannel;\nimport io.netty.handler.codec.http.HttpObjectAggregator;\nimport io.netty.handler.codec.http.HttpServerCodec;\nimport io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;\nimport io.netty.handler.stream.ChunkedWriteHandler;\nimport io.netty.handler.timeout.IdleStateHandler;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.stereotype.Component;\n\nimport javax.annotation.PostConstruct;\nimport javax.annotation.PreDestroy;\nimport javax.annotation.Resource;\nimport java.net.InetSocketAddress;\nimport java.util.concurrent.TimeUnit;\n\n@Slf4j\n@Component\npublic class NettyServer {\n\n    @Value(&quot;${netty.port}&quot;)\n    private Integer port;\n\n    /**\n     * boosGroup线程组， 负责接受连接\n     */\n    private NioEventLoopGroup boosGroup = null;\n    /**\n     * workerGroup线程组， 负责处理消息\n     */\n    private NioEventLoopGroup workerGroup = null;\n\n    /**\n     * Netty Server Channel\n     */\n    private Channel channel;\n\n    /**\n     * 自定义的消息处理器\n     */\n    @Resource\n    private WebSocketChatHandler webSocketChatHandler;\n\n    /**\n     * 启动Netty服务器\n     * @throws InterruptedException\n     */\n    @PostConstruct\n    public void start() throws InterruptedException {\n        boosGroup = new NioEventLoopGroup(1);\n        workerGroup = new NioEventLoopGroup();\n        ServerBootstrap serverBootstrap = new ServerBootstrap();\n        serverBootstrap.group(boosGroup, workerGroup)\n                .channel(NioServerSocketChannel.class)\n                .localAddress(new InetSocketAddress(port))\n                .childHandler(new ChannelInitializer&lt;SocketChannel&gt;() {\n                    @Override\n                    protected void initChannel(SocketChannel socketChannel) throws Exception {\n                        ChannelPipeline pipeline = socketChannel.pipeline();\n                        // http协议解码器\n                        pipeline.addLast(new HttpServerCodec());\n                        // 大数据流支持\n                        pipeline.addLast(new ChunkedWriteHandler());\n                        //对http message进行聚合，聚合成FullHttpRequest或FullHttpResponse\n                        pipeline.addLast(new HttpObjectAggregator(8 * 1024));\n                        /**\n                         *  websocket服务器处理对协议，用于指定给客户端连接访问的路径\n                         * 该handler会帮你处理一些繁重的复杂的事\n                         * 会帮你处理握手动作：handshaking(close,ping,pong) ping + pong = 心跳\n                         * 对于websocket来讲，都是以frames进行传输的，不同的数据类型对应的frames也不同\n                         */\n                        pipeline.addLast(new WebSocketServerProtocolHandler(&quot;/ws&quot;));\n                        // 心跳检测确认存活， 超过6秒没收到来自客户端的心跳就将其踢出\n                        pipeline.addLast(new IdleStateHandler(6, 0, 0, TimeUnit.SECONDS));\n                        // 自定义的消息处理器\n                        pipeline.addLast(webSocketChatHandler);\n                    }\n                })\n                // 服务端 accept 队列的大小\n                .option(ChannelOption.SO_BACKLOG, 1024)\n                // TCP Keepalive 机制，实现 TCP 层级的心跳保活功能\n                .childOption(ChannelOption.SO_KEEPALIVE, true)\n                // 允许较小的数据包的发送，降低延迟\n                .childOption(ChannelOption.TCP_NODELAY, true);\n        ChannelFuture channelFuture = serverBootstrap.bind().sync();\n        // 同步阻塞等待启动成功\n        if (channelFuture.isSuccess()) {\n            channel = channelFuture.channel();\n            log.info(&quot;[NettyServer.start] Netty服务器启动成功， 运行在  {} 端口&quot;, port);\n        }\n    }\n\n    /**\n     * 关闭Netty服务器\n     */\n    @PreDestroy\n    public void shutdown() {\n        if (channel != null) {\n            channel.close();\n        }\n        boosGroup.shutdownGracefully();\n        workerGroup.shutdownGracefully();\n        log.info(&quot;[NettyServer.shutdown] Netty服务关闭&quot;);\n    }\n\n}\n</code></pre>\n<h2 id=\"h2-javascript\"><a name=\"JavaScript\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>JavaScript</h2><pre><code class=\"lang-javascript\">import {LOGIN, ROUTES} from &#39;@/services/api&#39;\nimport {request, METHOD, removeAuthorization} from &#39;@/utils/request&#39;\n\n/**\n * 登录服务\n * @param name 账户名\n * @param password 账户密码\n * @returns {Promise&lt;AxiosResponse&lt;T&gt;&gt;}\n */\nexport async function login(name, password) {\n  return request(LOGIN, METHOD.POST, {\n    username: name,\n    password: password\n  })\n}\n\nexport async function emailLogin(email, code) {\n  return request(LOGIN + &#39;/email&#39;, METHOD.POST, {\n    email: email,\n    code: code\n  })\n}\n\nexport async function getRoutesConfig() {\n  return request(ROUTES, METHOD.GET)\n}\n\n/**\n * 退出登录\n */\nexport function logout() {\n  localStorage.removeItem(process.env.VUE_APP_ROUTES_KEY)\n  localStorage.removeItem(process.env.VUE_APP_PERMISSIONS_KEY)\n  localStorage.removeItem(process.env.VUE_APP_ROLES_KEY)\n  removeAuthorization()\n}\nexport default {\n  login,\n  emailLogin,\n  logout,\n  getRoutesConfig\n}\n</code></pre>\n<h2 id=\"h2-typescript\"><a name=\"TypeScript\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>TypeScript</h2><pre><code class=\"lang-typescript\">import axios from &quot;axios&quot;;\naxios.defaults.timeout = 5000;\naxios.defaults.withCredentials = true;\n\nconst preUrl: string = import.meta.env.VITE_BASE_URL;\n\nenum METHOD{\n  GET = &#39;get&#39;,\n  POST = &#39;post&#39;,\n  DELETE = &#39;delete&#39;,\n  PUT = &#39;put&#39;\n}\n\nasync function request(url: string, method: METHOD, params?: any, config?: any): Promise&lt;any&gt; {\n  return axios({\n    url: preUrl + url,\n    method: method,\n    params: params,\n    headers: {\n      &quot;Access-Control-Allow-Origin&quot;: &quot;*&quot;,\n      &quot;Access-Control-Allow-Headers&quot;:\n        &quot;Content-Type, Content-Length, Authorization, Accept, X-Requested-With&quot;,\n      &quot;Content-Type&quot;: &quot;application/json;charset=utf-8&quot;,\n    },\n  });\n}\n\nexport {\n  METHOD,\n  request\n}\n</code></pre>\n<h2 id=\"h2-golang\"><a name=\"Golang\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>Golang</h2><pre><code class=\"lang-go\">package controller\n\nimport (\n    &quot;strconv&quot;\n    &quot;wzm/danmu3.0/common&quot;\n    &quot;wzm/danmu3.0/dto&quot;\n    &quot;wzm/danmu3.0/model&quot;\n    &quot;wzm/danmu3.0/response&quot;\n\n    &quot;github.com/gin-gonic/gin&quot;\n    &quot;github.com/jinzhu/gorm&quot;\n)\n\nfunc GetComments(ctx *gin.Context) {\n    var comments []dto.CommentDto\n    var count int\n    //获取分页信息\n    page, _ := strconv.Atoi(ctx.Query(&quot;page&quot;))\n    pageSize, _ := strconv.Atoi(ctx.Query(&quot;page_size&quot;))\n    vid, _ := strconv.Atoi(ctx.Query(&quot;vid&quot;))\n    sqlComment := &quot;select comments.id,comments.created_at,content,uid,users.name,users.avatar from comments,users where comments.deleted_at is null and comments.uid = users.id and vid = ? limit ? offset ?&quot;\n    sqlReply := &quot;select replies.id,replies.created_at,content,uid,users.name,users.avatar,reply_uid,reply_name from replies,users where replies.deleted_at is null and replies.uid = users.id and cid = ?&quot;\n    DB := common.GetDB()\n    if !IsVideoExist(DB, uint(vid)) {\n        response.Fail(ctx, nil, &quot;视频不存在&quot;)\n        return\n    }\n    if page &gt; 0 &amp;&amp; pageSize &gt; 0 {\n        DB.Model(&amp;model.Comment{}).Where(&quot;vid = ?&quot;, vid).Count(&amp;count)\n        DB.Raw(sqlComment, vid, pageSize, (page-1)*pageSize).Scan(&amp;comments)\n        for i := 0; i &lt; len(comments); i++ {\n            //查询回复\n            DB.Raw(sqlReply, comments[i].ID).Scan(&amp;comments[i].Reply)\n        }\n        response.Success(ctx, gin.H{&quot;count&quot;: count, &quot;comments&quot;: comments}, &quot;ok&quot;)\n    } else {\n        response.Fail(ctx, nil, &quot;获取失败&quot;)\n    }\n}\n\n/*********************************************************\n** 函数功能: 获取评论列表v2\n** 日    期:2021/10/5\n**********************************************************/\nfunc GetCommentsV2(ctx *gin.Context) {\n    var comments []dto.CommentDto\n    var count int\n    //获取分页信息\n    page, _ := strconv.Atoi(ctx.Query(&quot;page&quot;))\n    pageSize, _ := strconv.Atoi(ctx.Query(&quot;page_size&quot;))\n    vid, _ := strconv.Atoi(ctx.Query(&quot;vid&quot;))\n    sqlComment := &quot;select comments.id,comments.created_at,content,uid,users.name,users.avatar,reply_count from comments,users where comments.deleted_at is null and comments.uid = users.id and vid = ? limit ? offset ?&quot;\n    sqlReply := &quot;select content,users.name,reply_uid,reply_name from replies,users where replies.deleted_at is null and replies.uid = users.id and cid = ? limit 2&quot;\n    DB := common.GetDB()\n    if !IsVideoExist(DB, uint(vid)) {\n        response.Fail(ctx, nil, &quot;视频不存在&quot;)\n        return\n    }\n    if page &gt; 0 &amp;&amp; pageSize &gt; 0 {\n        DB.Model(&amp;model.Comment{}).Where(&quot;vid = ?&quot;, vid).Count(&amp;count)\n        DB.Raw(sqlComment, vid, pageSize, (page-1)*pageSize).Scan(&amp;comments)\n        for i := 0; i &lt; len(comments); i++ {\n            //查询回复\n            DB.Raw(sqlReply, comments[i].ID).Scan(&amp;comments[i].Reply)\n        }\n        response.Success(ctx, gin.H{&quot;count&quot;: count, &quot;comments&quot;: comments}, &quot;ok&quot;)\n    } else {\n        response.Fail(ctx, nil, &quot;获取失败&quot;)\n    }\n}\n\n/*********************************************************\n** 函数功能: 获取回复详情v2\n** 日    期:2021/10/5\n**********************************************************/\nfunc GetReplyDetailsV2(ctx *gin.Context) {\n    var replies []dto.ReplyDto\n    //获取分页信息\n    cid, _ := strconv.Atoi(ctx.Query(&quot;cid&quot;))\n    sql := &quot;select replies.id,replies.created_at,content,uid,users.name,users.avatar,reply_uid,reply_name from replies,users where replies.deleted_at is null and replies.uid = users.id and cid = ?&quot;\n    DB := common.GetDB()\n    if !IsCommentExist(DB, uint(cid)) {\n        response.Fail(ctx, nil, &quot;评论不存在&quot;)\n        return\n    }\n    DB.Model(&amp;model.Reply{}).Where(&quot;cid = ?&quot;, cid)\n    DB.Raw(sql, cid).Scan(&amp;replies)\n    response.Success(ctx, gin.H{&quot;replies&quot;: replies}, &quot;ok&quot;)\n}\n\n/*********************************************************\n** 函数功能: 删除评论\n** 日    期:2021/7/27\n**********************************************************/\nfunc DeleteComment(ctx *gin.Context) {\n    //获取参数\n    var request = IDRequest{}\n    if err := ctx.Bind(&amp;request); err != nil {\n        response.Fail(ctx, nil, &quot;请求错误&quot;)\n        return\n    }\n    id := request.ID\n    uid, _ := ctx.Get(&quot;id&quot;)\n    DB := common.GetDB()\n    DB.Where(&quot;id = ? and uid = ?&quot;, id, uid).Delete(model.Comment{})\n    response.Success(ctx, nil, &quot;ok&quot;)\n}\n\n/*********************************************************\n** 函数功能: 删除回复\n** 日    期:2021/7/27\n**********************************************************/\nfunc DeleteReply(ctx *gin.Context) {\n    var request = IDRequest{}\n    if err := ctx.Bind(&amp;request); err != nil {\n        response.Fail(ctx, nil, &quot;请求错误&quot;)\n        return\n    }\n    id := request.ID\n    uid, _ := ctx.Get(&quot;id&quot;)\n    DB := common.GetDB()\n    DB.Where(&quot;id = ? and uid = ?&quot;, id, uid).Delete(model.Reply{})\n    response.Success(ctx, nil, &quot;ok&quot;)\n}\n\n/*********************************************************\n** 函数功能: 评论\n** 日    期:2021/7/27\n**********************************************************/\nfunc Comment(ctx *gin.Context) {\n    var comment = model.Comment{}\n    err := ctx.Bind(&amp;comment)\n    if err != nil {\n        response.Fail(ctx, nil, &quot;请求错误&quot;)\n        return\n    }\n    content := comment.Content\n    vid := comment.Vid\n    uid, _ := ctx.Get(&quot;id&quot;)\n    DB := common.GetDB()\n    if !IsVideoExist(DB, vid) {\n        response.CheckFail(ctx, nil, &quot;视频不存在&quot;)\n        return\n    }\n    if len(content) == 0 {\n        response.CheckFail(ctx, nil, &quot;评论不能为空&quot;)\n        return\n    }\n    DB.Create(&amp;model.Comment{Vid: vid, Content: content, Uid: uid.(uint)})\n    response.Success(ctx, nil, &quot;ok&quot;)\n}\n\n/*********************************************************\n** 函数功能: 回复\n** 日    期:2021/7/27\n**********************************************************/\nfunc Reply(ctx *gin.Context) {\n    var reply = model.Reply{}\n    err := ctx.Bind(&amp;reply)\n    if err != nil {\n        response.Fail(ctx, nil, &quot;请求错误&quot;)\n        return\n    }\n    cid := reply.Cid\n    content := reply.Content\n    replyUid := reply.ReplyUid\n    replyName := reply.ReplyName\n    uid, _ := ctx.Get(&quot;id&quot;)\n    DB := common.GetDB()\n    if cid == 0 || !IsCommentExist(DB, cid) {\n        response.CheckFail(ctx, nil, &quot;评论不存在&quot;)\n        return\n    }\n    if len(content) == 0 {\n        response.CheckFail(ctx, nil, &quot;回复不能为空&quot;)\n        return\n    }\n    newReply := model.Reply{\n        Cid:       cid,\n        Content:   content,\n        Uid:       uid.(uint),\n        ReplyUid:  replyUid,\n        ReplyName: replyName,\n    }\n    DB.Create(&amp;newReply)\n    //回复数+1,用于评论v2接口\n    DB.Model(&amp;model.Comment{}).Where(&quot;id = ?&quot;, cid).UpdateColumn(&quot;reply_count&quot;, gorm.Expr(&quot;reply_count + ?&quot;, 1))\n    response.Success(ctx, nil, &quot;ok&quot;)\n}\n\n/*********************************************************\n** 函数功能: 评论是否存在\n** 日    期:2021/7/27\n**********************************************************/\nfunc IsCommentExist(db *gorm.DB, cid uint) bool {\n    var comment model.Comment\n    db.Where(&quot;id = ?&quot;, cid).First(&amp;comment)\n    if comment.ID != 0 {\n        return true\n    }\n    return false\n}\n</code></pre>\n<h2 id=\"h2-python\"><a name=\"Python\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>Python</h2><pre><code class=\"lang-python\">&quot;&quot;&quot;Export a YOLOv5 *.pt model to TorchScript, ONNX, CoreML formats\n\nUsage:\n    $ python path/to/export.py --weights yolov5s.pt --img 640 --batch 1\n&quot;&quot;&quot;\n\nimport argparse\nimport sys\nimport time\nfrom pathlib import Path\n\nimport torch\nimport torch.nn as nn\nfrom torch.utils.mobile_optimizer import optimize_for_mobile\n\nFILE = Path(__file__).absolute()\nsys.path.append(FILE.parents[0].as_posix())  # add yolov5/ to path\n\nfrom models.common import Conv\nfrom models.yolo import Detect\nfrom models.experimental import attempt_load\nfrom utils.activations import Hardswish, SiLU\nfrom utils.general import colorstr, check_img_size, check_requirements, file_size, set_logging\nfrom utils.torch_utils import select_device\n\n\ndef export_torchscript(model, img, file, optimize):\n    # TorchScript model export\n    prefix = colorstr(&#39;TorchScript:&#39;)\n    try:\n        print(f&#39;\\n{prefix} starting export with torch {torch.__version__}...&#39;)\n        f = file.with_suffix(&#39;.torchscript.pt&#39;)\n        ts = torch.jit.trace(model, img, strict=False)\n        (optimize_for_mobile(ts) if optimize else ts).save(f)\n        print(f&#39;{prefix} export success, saved as {f} ({file_size(f):.1f} MB)&#39;)\n        return ts\n    except Exception as e:\n        print(f&#39;{prefix} export failure: {e}&#39;)\n\n\ndef export_onnx(model, img, file, opset_version, train, dynamic, simplify):\n    # ONNX model export\n    prefix = colorstr(&#39;ONNX:&#39;)\n    try:\n        check_requirements((&#39;onnx&#39;, &#39;onnx-simplifier&#39;))\n        import onnx\n\n        print(f&#39;\\n{prefix} starting export with onnx {onnx.__version__}...&#39;)\n        f = file.with_suffix(&#39;.onnx&#39;)\n        torch.onnx.export(model, img, f, verbose=False, opset_version=opset_version,\n                          training=torch.onnx.TrainingMode.TRAINING if train else torch.onnx.TrainingMode.EVAL,\n                          do_constant_folding=not train,\n                          input_names=[&#39;images&#39;],\n                          output_names=[&#39;output&#39;],\n                          dynamic_axes={&#39;images&#39;: {0: &#39;batch&#39;, 2: &#39;height&#39;, 3: &#39;width&#39;},  # shape(1,3,640,640)\n                                        &#39;output&#39;: {0: &#39;batch&#39;, 1: &#39;anchors&#39;}  # shape(1,25200,85)\n                                        } if dynamic else None)\n\n        # Checks\n        model_onnx = onnx.load(f)  # load onnx model\n        onnx.checker.check_model(model_onnx)  # check onnx model\n        # print(onnx.helper.printable_graph(model_onnx.graph))  # print\n\n        # Simplify\n        if simplify:\n            try:\n                import onnxsim\n\n                print(f&#39;{prefix} simplifying with onnx-simplifier {onnxsim.__version__}...&#39;)\n                model_onnx, check = onnxsim.simplify(\n                    model_onnx,\n                    dynamic_input_shape=dynamic,\n                    input_shapes={&#39;images&#39;: list(img.shape)} if dynamic else None)\n                assert check, &#39;assert check failed&#39;\n                onnx.save(model_onnx, f)\n            except Exception as e:\n                print(f&#39;{prefix} simplifier failure: {e}&#39;)\n        print(f&#39;{prefix} export success, saved as {f} ({file_size(f):.1f} MB)&#39;)\n    except Exception as e:\n        print(f&#39;{prefix} export failure: {e}&#39;)\n\n\ndef export_coreml(model, img, file):\n    # CoreML model export\n    prefix = colorstr(&#39;CoreML:&#39;)\n    try:\n        import coremltools as ct\n\n        print(f&#39;\\n{prefix} starting export with coremltools {ct.__version__}...&#39;)\n        f = file.with_suffix(&#39;.mlmodel&#39;)\n        model.train()  # CoreML exports should be placed in model.train() mode\n        ts = torch.jit.trace(model, img, strict=False)  # TorchScript model\n        model = ct.convert(ts, inputs=[ct.ImageType(&#39;image&#39;, shape=img.shape, scale=1 / 255.0, bias=[0, 0, 0])])\n        model.save(f)\n        print(f&#39;{prefix} export success, saved as {f} ({file_size(f):.1f} MB)&#39;)\n    except Exception as e:\n        print(f&#39;{prefix} export failure: {e}&#39;)\n\n\ndef run(weights=&#39;./yolov5s.pt&#39;,  # weights path\n        img_size=(640, 640),  # image (height, width)\n        batch_size=1,  # batch size\n        device=&#39;cpu&#39;,  # cuda device, i.e. 0 or 0,1,2,3 or cpu\n        include=(&#39;torchscript&#39;, &#39;onnx&#39;, &#39;coreml&#39;),  # include formats\n        half=False,  # FP16 half-precision export\n        inplace=False,  # set YOLOv5 Detect() inplace=True\n        train=False,  # model.train() mode\n        optimize=False,  # TorchScript: optimize for mobile\n        dynamic=False,  # ONNX: dynamic axes\n        simplify=False,  # ONNX: simplify model\n        opset_version=12,  # ONNX: opset version\n        ):\n    t = time.time()\n    include = [x.lower() for x in include]\n    img_size *= 2 if len(img_size) == 1 else 1  # expand\n    file = Path(weights)\n\n    # Load PyTorch model\n    device = select_device(device)\n    assert not (device.type == &#39;cpu&#39; and half), &#39;--half only compatible with GPU export, i.e. use --device 0&#39;\n    model = attempt_load(weights, map_location=device)  # load FP32 model\n    names = model.names\n\n    # Input\n    gs = int(max(model.stride))  # grid size (max stride)\n    img_size = [check_img_size(x, gs) for x in img_size]  # verify img_size are gs-multiples\n    img = torch.zeros(batch_size, 3, *img_size).to(device)  # image size(1,3,320,192) iDetection\n\n    # Update model\n    if half:\n        img, model = img.half(), model.half()  # to FP16\n    model.train() if train else model.eval()  # training mode = no Detect() layer grid construction\n    for k, m in model.named_modules():\n        if isinstance(m, Conv):  # assign export-friendly activations\n            if isinstance(m.act, nn.Hardswish):\n                m.act = Hardswish()\n            elif isinstance(m.act, nn.SiLU):\n                m.act = SiLU()\n        elif isinstance(m, Detect):\n            m.inplace = inplace\n            m.onnx_dynamic = dynamic\n            # m.forward = m.forward_export  # assign forward (optional)\n\n    for _ in range(2):\n        y = model(img)  # dry runs\n    print(f&quot;\\n{colorstr(&#39;PyTorch:&#39;)} starting from {weights} ({file_size(weights):.1f} MB)&quot;)\n\n    # Exports\n    if &#39;torchscript&#39; in include:\n        export_torchscript(model, img, file, optimize)\n    if &#39;onnx&#39; in include:\n        export_onnx(model, img, file, opset_version, train, dynamic, simplify)\n    if &#39;coreml&#39; in include:\n        export_coreml(model, img, file)\n\n    # Finish\n    print(f&#39;\\nExport complete ({time.time() - t:.2f}s). Visualize with https://github.com/lutzroeder/netron.&#39;)\n\n\ndef parse_opt():\n    parser = argparse.ArgumentParser()\n    parser.add_argument(&#39;--weights&#39;, type=str, default=&#39;res/best.pt&#39;, help=&#39;weights path&#39;)\n    # parser.add_argument(&#39;--img-size&#39;, nargs=&#39;+&#39;, type=int, default=[640, 640], help=&#39;image (height, width)&#39;)\n    parser.add_argument(&#39;--img-size&#39;, nargs=&#39;+&#39;, type=int, default=[480, 640], help=&#39;image (height, width)&#39;)\n    parser.add_argument(&#39;--batch-size&#39;, type=int, default=1, help=&#39;batch size&#39;)\n    parser.add_argument(&#39;--device&#39;, default=&#39;cpu&#39;, help=&#39;cuda device, i.e. 0 or 0,1,2,3 or cpu&#39;)\n    parser.add_argument(&#39;--include&#39;, nargs=&#39;+&#39;, default=[&#39;torchscript&#39;, &#39;onnx&#39;, &#39;coreml&#39;], help=&#39;include formats&#39;)\n    parser.add_argument(&#39;--half&#39;, action=&#39;store_true&#39;, help=&#39;FP16 half-precision export&#39;)\n    parser.add_argument(&#39;--inplace&#39;, action=&#39;store_true&#39;, help=&#39;set YOLOv5 Detect() inplace=True&#39;)\n    parser.add_argument(&#39;--train&#39;, action=&#39;store_true&#39;, help=&#39;model.train() mode&#39;)\n    parser.add_argument(&#39;--optimize&#39;, action=&#39;store_true&#39;, help=&#39;TorchScript: optimize for mobile&#39;)\n    parser.add_argument(&#39;--dynamic&#39;, action=&#39;store_true&#39;, help=&#39;ONNX: dynamic axes&#39;)\n    parser.add_argument(&#39;--simplify&#39;, action=&#39;store_true&#39;, help=&#39;ONNX: simplify model&#39;)\n    parser.add_argument(&#39;--opset-version&#39;, type=int, default=12, help=&#39;ONNX: opset version&#39;)\n    opt = parser.parse_args()\n    return opt\n\n\ndef main(opt):\n    set_logging()\n    print(colorstr(&#39;export: &#39;) + &#39;, &#39;.join(f&#39;{k}={v}&#39; for k, v in vars(opt).items()))\n    run(**vars(opt))\n\n\nif __name__ == &quot;__main__&quot;:\n    opt = parse_opt()\n    main(opt)\n</code></pre>\n', '# 代码样式\n\n## CPP\n\n``` cpp\n#include <iostream> //数据输入输出流\n#include <cstdio>\ntypedef long long ll;\nusing namespace std;\n\nconst int MAXN = 1000001;\nll n, m, a[MAXN], ans[MAXN << 2], tag[MAXN << 2];\n\ninline ll ls(ll x)\n{\n    return x << 1;\n}\n\ninline ll rs(ll x)\n{\n    return x << 1 | 1;\n}\n\ninline void push_up(ll p)\n{\n    ans[p] = ans[ls(p)] + ans[rs(p)];\n}\n\nvoid build(ll p, ll l, ll r)\n{\n    tag[p] = 0;\n    if (l == r)\n    {\n        ans[p] = a[l];\n        return;\n    }\n    ll mid = (l + r) >> 1;\n    build(ls(p), l, mid);\n    build(rs(p), mid + 1, r);\n    push_up(p);\n}\n\ninline void f(ll p, ll l, ll r, ll k)\n{\n    tag[p] += k;\n    ans[p] += k * (r - l + 1);\n}\n\ninline void push_down(ll p, ll l, ll r)\n{\n    ll mid = (l + r) >> 1;\n    f(ls(p), l, mid, tag[p]);\n    f(rs(p), mid + 1, r, tag[p]);\n    tag[p] = 0;\n}\n\ninline void update(ll nl, ll nr, ll l, ll r, ll p, ll k)\n{\n    if (nl <= l && r <= nr)\n    {\n        // ans[p] += k * (r - l + 1);\n        // tag[p] += k;\n        f(p, l, r, k);\n        return;\n    }\n    push_down(p, l, r);\n    ll mid = (l + r) >> 1;\n    if (nl <= mid)\n    {\n        update(nl, nr, l, mid, ls(p), k);\n    }\n    if (nr > mid)\n    {\n        update(nl, nr, mid + 1, r, rs(p), k);\n    }\n    push_up(p);\n}\n\nll query(ll q_x, ll q_y, ll l, ll r, ll p)\n{\n    ll res = 0;\n    if (q_x <= l && r <= q_y)\n    {\n        return ans[p];\n    }\n    ll mid = (l + r) >> 1;\n    push_down(p, l, r);\n    if (q_x <= mid)\n    {\n        res += query(q_x, q_y, l, mid, ls(p));\n    }\n    if (q_y > mid)\n    {\n        res += query(q_x, q_y, mid + 1, r, rs(p));\n    }\n    return res;\n}\n\nint main(void)\n{\n    ll a1, b, c, d, e, f;\n    scanf(\"%lld%lld\", &n, &m);\n    for (ll i = 1; i <= n; i++)\n    {\n        scanf(\"%lld\", &a[i]);\n    }\n    build(1, 1, n);\n    while (m--)\n    {\n        scanf(\"%lld\", &a1);\n        switch (a1)\n        {\n            case 1:\n            {\n                scanf(\"%lld%lld%lld\", &b, &c, &d);\n                update(b, c, 1, n, 1, d);\n                break;\n            }\n            case 2:\n            {\n                scanf(\"%lld%lld\", &e, &f);\n                printf(\"%lld\\n\", query(e, f, 1, n, 1));\n                break;\n            }\n            default:\n                break;\n        }\n    }\n    return 0;\n}\n```\n\n## Java\n\n``` java\npackage com.tao.chat;\n\nimport com.tao.chat.handler.WebSocketChatHandler;\nimport io.netty.bootstrap.ServerBootstrap;\nimport io.netty.channel.*;\nimport io.netty.channel.nio.NioEventLoopGroup;\nimport io.netty.channel.socket.SocketChannel;\nimport io.netty.channel.socket.nio.NioServerSocketChannel;\nimport io.netty.handler.codec.http.HttpObjectAggregator;\nimport io.netty.handler.codec.http.HttpServerCodec;\nimport io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;\nimport io.netty.handler.stream.ChunkedWriteHandler;\nimport io.netty.handler.timeout.IdleStateHandler;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.stereotype.Component;\n\nimport javax.annotation.PostConstruct;\nimport javax.annotation.PreDestroy;\nimport javax.annotation.Resource;\nimport java.net.InetSocketAddress;\nimport java.util.concurrent.TimeUnit;\n\n@Slf4j\n@Component\npublic class NettyServer {\n\n    @Value(\"${netty.port}\")\n    private Integer port;\n\n    /**\n     * boosGroup线程组， 负责接受连接\n     */\n    private NioEventLoopGroup boosGroup = null;\n    /**\n     * workerGroup线程组， 负责处理消息\n     */\n    private NioEventLoopGroup workerGroup = null;\n\n    /**\n     * Netty Server Channel\n     */\n    private Channel channel;\n\n    /**\n     * 自定义的消息处理器\n     */\n    @Resource\n    private WebSocketChatHandler webSocketChatHandler;\n\n    /**\n     * 启动Netty服务器\n     * @throws InterruptedException\n     */\n    @PostConstruct\n    public void start() throws InterruptedException {\n        boosGroup = new NioEventLoopGroup(1);\n        workerGroup = new NioEventLoopGroup();\n        ServerBootstrap serverBootstrap = new ServerBootstrap();\n        serverBootstrap.group(boosGroup, workerGroup)\n                .channel(NioServerSocketChannel.class)\n                .localAddress(new InetSocketAddress(port))\n                .childHandler(new ChannelInitializer<SocketChannel>() {\n                    @Override\n                    protected void initChannel(SocketChannel socketChannel) throws Exception {\n                        ChannelPipeline pipeline = socketChannel.pipeline();\n                        // http协议解码器\n                        pipeline.addLast(new HttpServerCodec());\n                        // 大数据流支持\n                        pipeline.addLast(new ChunkedWriteHandler());\n                        //对http message进行聚合，聚合成FullHttpRequest或FullHttpResponse\n                        pipeline.addLast(new HttpObjectAggregator(8 * 1024));\n                        /**\n                         *  websocket服务器处理对协议，用于指定给客户端连接访问的路径\n                         * 该handler会帮你处理一些繁重的复杂的事\n                         * 会帮你处理握手动作：handshaking(close,ping,pong) ping + pong = 心跳\n                         * 对于websocket来讲，都是以frames进行传输的，不同的数据类型对应的frames也不同\n                         */\n                        pipeline.addLast(new WebSocketServerProtocolHandler(\"/ws\"));\n                        // 心跳检测确认存活， 超过6秒没收到来自客户端的心跳就将其踢出\n                        pipeline.addLast(new IdleStateHandler(6, 0, 0, TimeUnit.SECONDS));\n                        // 自定义的消息处理器\n                        pipeline.addLast(webSocketChatHandler);\n                    }\n                })\n                // 服务端 accept 队列的大小\n                .option(ChannelOption.SO_BACKLOG, 1024)\n                // TCP Keepalive 机制，实现 TCP 层级的心跳保活功能\n                .childOption(ChannelOption.SO_KEEPALIVE, true)\n                // 允许较小的数据包的发送，降低延迟\n                .childOption(ChannelOption.TCP_NODELAY, true);\n        ChannelFuture channelFuture = serverBootstrap.bind().sync();\n        // 同步阻塞等待启动成功\n        if (channelFuture.isSuccess()) {\n            channel = channelFuture.channel();\n            log.info(\"[NettyServer.start] Netty服务器启动成功， 运行在  {} 端口\", port);\n        }\n    }\n\n    /**\n     * 关闭Netty服务器\n     */\n    @PreDestroy\n    public void shutdown() {\n        if (channel != null) {\n            channel.close();\n        }\n        boosGroup.shutdownGracefully();\n        workerGroup.shutdownGracefully();\n        log.info(\"[NettyServer.shutdown] Netty服务关闭\");\n    }\n\n}\n```\n\n## JavaScript\n\n``` javascript\nimport {LOGIN, ROUTES} from \'@/services/api\'\nimport {request, METHOD, removeAuthorization} from \'@/utils/request\'\n\n/**\n * 登录服务\n * @param name 账户名\n * @param password 账户密码\n * @returns {Promise<AxiosResponse<T>>}\n */\nexport async function login(name, password) {\n  return request(LOGIN, METHOD.POST, {\n    username: name,\n    password: password\n  })\n}\n\nexport async function emailLogin(email, code) {\n  return request(LOGIN + \'/email\', METHOD.POST, {\n    email: email,\n    code: code\n  })\n}\n\nexport async function getRoutesConfig() {\n  return request(ROUTES, METHOD.GET)\n}\n\n/**\n * 退出登录\n */\nexport function logout() {\n  localStorage.removeItem(process.env.VUE_APP_ROUTES_KEY)\n  localStorage.removeItem(process.env.VUE_APP_PERMISSIONS_KEY)\n  localStorage.removeItem(process.env.VUE_APP_ROLES_KEY)\n  removeAuthorization()\n}\nexport default {\n  login,\n  emailLogin,\n  logout,\n  getRoutesConfig\n}\n\n```\n\n## TypeScript\n\n``` typescript\nimport axios from \"axios\";\naxios.defaults.timeout = 5000;\naxios.defaults.withCredentials = true;\n\nconst preUrl: string = import.meta.env.VITE_BASE_URL;\n\nenum METHOD{\n  GET = \'get\',\n  POST = \'post\',\n  DELETE = \'delete\',\n  PUT = \'put\'\n}\n\nasync function request(url: string, method: METHOD, params?: any, config?: any): Promise<any> {\n  return axios({\n    url: preUrl + url,\n    method: method,\n    params: params,\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\":\n        \"Content-Type, Content-Length, Authorization, Accept, X-Requested-With\",\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n  });\n}\n\nexport {\n  METHOD,\n  request\n}\n\n```\n\n## Golang\n\n``` go\npackage controller\n\nimport (\n	\"strconv\"\n	\"wzm/danmu3.0/common\"\n	\"wzm/danmu3.0/dto\"\n	\"wzm/danmu3.0/model\"\n	\"wzm/danmu3.0/response\"\n\n	\"github.com/gin-gonic/gin\"\n	\"github.com/jinzhu/gorm\"\n)\n\nfunc GetComments(ctx *gin.Context) {\n	var comments []dto.CommentDto\n	var count int\n	//获取分页信息\n	page, _ := strconv.Atoi(ctx.Query(\"page\"))\n	pageSize, _ := strconv.Atoi(ctx.Query(\"page_size\"))\n	vid, _ := strconv.Atoi(ctx.Query(\"vid\"))\n	sqlComment := \"select comments.id,comments.created_at,content,uid,users.name,users.avatar from comments,users where comments.deleted_at is null and comments.uid = users.id and vid = ? limit ? offset ?\"\n	sqlReply := \"select replies.id,replies.created_at,content,uid,users.name,users.avatar,reply_uid,reply_name from replies,users where replies.deleted_at is null and replies.uid = users.id and cid = ?\"\n	DB := common.GetDB()\n	if !IsVideoExist(DB, uint(vid)) {\n		response.Fail(ctx, nil, \"视频不存在\")\n		return\n	}\n	if page > 0 && pageSize > 0 {\n		DB.Model(&model.Comment{}).Where(\"vid = ?\", vid).Count(&count)\n		DB.Raw(sqlComment, vid, pageSize, (page-1)*pageSize).Scan(&comments)\n		for i := 0; i < len(comments); i++ {\n			//查询回复\n			DB.Raw(sqlReply, comments[i].ID).Scan(&comments[i].Reply)\n		}\n		response.Success(ctx, gin.H{\"count\": count, \"comments\": comments}, \"ok\")\n	} else {\n		response.Fail(ctx, nil, \"获取失败\")\n	}\n}\n\n/*********************************************************\n** 函数功能: 获取评论列表v2\n** 日    期:2021/10/5\n**********************************************************/\nfunc GetCommentsV2(ctx *gin.Context) {\n	var comments []dto.CommentDto\n	var count int\n	//获取分页信息\n	page, _ := strconv.Atoi(ctx.Query(\"page\"))\n	pageSize, _ := strconv.Atoi(ctx.Query(\"page_size\"))\n	vid, _ := strconv.Atoi(ctx.Query(\"vid\"))\n	sqlComment := \"select comments.id,comments.created_at,content,uid,users.name,users.avatar,reply_count from comments,users where comments.deleted_at is null and comments.uid = users.id and vid = ? limit ? offset ?\"\n	sqlReply := \"select content,users.name,reply_uid,reply_name from replies,users where replies.deleted_at is null and replies.uid = users.id and cid = ? limit 2\"\n	DB := common.GetDB()\n	if !IsVideoExist(DB, uint(vid)) {\n		response.Fail(ctx, nil, \"视频不存在\")\n		return\n	}\n	if page > 0 && pageSize > 0 {\n		DB.Model(&model.Comment{}).Where(\"vid = ?\", vid).Count(&count)\n		DB.Raw(sqlComment, vid, pageSize, (page-1)*pageSize).Scan(&comments)\n		for i := 0; i < len(comments); i++ {\n			//查询回复\n			DB.Raw(sqlReply, comments[i].ID).Scan(&comments[i].Reply)\n		}\n		response.Success(ctx, gin.H{\"count\": count, \"comments\": comments}, \"ok\")\n	} else {\n		response.Fail(ctx, nil, \"获取失败\")\n	}\n}\n\n/*********************************************************\n** 函数功能: 获取回复详情v2\n** 日    期:2021/10/5\n**********************************************************/\nfunc GetReplyDetailsV2(ctx *gin.Context) {\n	var replies []dto.ReplyDto\n	//获取分页信息\n	cid, _ := strconv.Atoi(ctx.Query(\"cid\"))\n	sql := \"select replies.id,replies.created_at,content,uid,users.name,users.avatar,reply_uid,reply_name from replies,users where replies.deleted_at is null and replies.uid = users.id and cid = ?\"\n	DB := common.GetDB()\n	if !IsCommentExist(DB, uint(cid)) {\n		response.Fail(ctx, nil, \"评论不存在\")\n		return\n	}\n	DB.Model(&model.Reply{}).Where(\"cid = ?\", cid)\n	DB.Raw(sql, cid).Scan(&replies)\n	response.Success(ctx, gin.H{\"replies\": replies}, \"ok\")\n}\n\n/*********************************************************\n** 函数功能: 删除评论\n** 日    期:2021/7/27\n**********************************************************/\nfunc DeleteComment(ctx *gin.Context) {\n	//获取参数\n	var request = IDRequest{}\n	if err := ctx.Bind(&request); err != nil {\n		response.Fail(ctx, nil, \"请求错误\")\n		return\n	}\n	id := request.ID\n	uid, _ := ctx.Get(\"id\")\n	DB := common.GetDB()\n	DB.Where(\"id = ? and uid = ?\", id, uid).Delete(model.Comment{})\n	response.Success(ctx, nil, \"ok\")\n}\n\n/*********************************************************\n** 函数功能: 删除回复\n** 日    期:2021/7/27\n**********************************************************/\nfunc DeleteReply(ctx *gin.Context) {\n	var request = IDRequest{}\n	if err := ctx.Bind(&request); err != nil {\n		response.Fail(ctx, nil, \"请求错误\")\n		return\n	}\n	id := request.ID\n	uid, _ := ctx.Get(\"id\")\n	DB := common.GetDB()\n	DB.Where(\"id = ? and uid = ?\", id, uid).Delete(model.Reply{})\n	response.Success(ctx, nil, \"ok\")\n}\n\n/*********************************************************\n** 函数功能: 评论\n** 日    期:2021/7/27\n**********************************************************/\nfunc Comment(ctx *gin.Context) {\n	var comment = model.Comment{}\n	err := ctx.Bind(&comment)\n	if err != nil {\n		response.Fail(ctx, nil, \"请求错误\")\n		return\n	}\n	content := comment.Content\n	vid := comment.Vid\n	uid, _ := ctx.Get(\"id\")\n	DB := common.GetDB()\n	if !IsVideoExist(DB, vid) {\n		response.CheckFail(ctx, nil, \"视频不存在\")\n		return\n	}\n	if len(content) == 0 {\n		response.CheckFail(ctx, nil, \"评论不能为空\")\n		return\n	}\n	DB.Create(&model.Comment{Vid: vid, Content: content, Uid: uid.(uint)})\n	response.Success(ctx, nil, \"ok\")\n}\n\n/*********************************************************\n** 函数功能: 回复\n** 日    期:2021/7/27\n**********************************************************/\nfunc Reply(ctx *gin.Context) {\n	var reply = model.Reply{}\n	err := ctx.Bind(&reply)\n	if err != nil {\n		response.Fail(ctx, nil, \"请求错误\")\n		return\n	}\n	cid := reply.Cid\n	content := reply.Content\n	replyUid := reply.ReplyUid\n	replyName := reply.ReplyName\n	uid, _ := ctx.Get(\"id\")\n	DB := common.GetDB()\n	if cid == 0 || !IsCommentExist(DB, cid) {\n		response.CheckFail(ctx, nil, \"评论不存在\")\n		return\n	}\n	if len(content) == 0 {\n		response.CheckFail(ctx, nil, \"回复不能为空\")\n		return\n	}\n	newReply := model.Reply{\n		Cid:       cid,\n		Content:   content,\n		Uid:       uid.(uint),\n		ReplyUid:  replyUid,\n		ReplyName: replyName,\n	}\n	DB.Create(&newReply)\n	//回复数+1,用于评论v2接口\n	DB.Model(&model.Comment{}).Where(\"id = ?\", cid).UpdateColumn(\"reply_count\", gorm.Expr(\"reply_count + ?\", 1))\n	response.Success(ctx, nil, \"ok\")\n}\n\n/*********************************************************\n** 函数功能: 评论是否存在\n** 日    期:2021/7/27\n**********************************************************/\nfunc IsCommentExist(db *gorm.DB, cid uint) bool {\n	var comment model.Comment\n	db.Where(\"id = ?\", cid).First(&comment)\n	if comment.ID != 0 {\n		return true\n	}\n	return false\n}\n```\n\n## Python\n\n``` python\n\"\"\"Export a YOLOv5 *.pt model to TorchScript, ONNX, CoreML formats\n\nUsage:\n    $ python path/to/export.py --weights yolov5s.pt --img 640 --batch 1\n\"\"\"\n\nimport argparse\nimport sys\nimport time\nfrom pathlib import Path\n\nimport torch\nimport torch.nn as nn\nfrom torch.utils.mobile_optimizer import optimize_for_mobile\n\nFILE = Path(__file__).absolute()\nsys.path.append(FILE.parents[0].as_posix())  # add yolov5/ to path\n\nfrom models.common import Conv\nfrom models.yolo import Detect\nfrom models.experimental import attempt_load\nfrom utils.activations import Hardswish, SiLU\nfrom utils.general import colorstr, check_img_size, check_requirements, file_size, set_logging\nfrom utils.torch_utils import select_device\n\n\ndef export_torchscript(model, img, file, optimize):\n    # TorchScript model export\n    prefix = colorstr(\'TorchScript:\')\n    try:\n        print(f\'\\n{prefix} starting export with torch {torch.__version__}...\')\n        f = file.with_suffix(\'.torchscript.pt\')\n        ts = torch.jit.trace(model, img, strict=False)\n        (optimize_for_mobile(ts) if optimize else ts).save(f)\n        print(f\'{prefix} export success, saved as {f} ({file_size(f):.1f} MB)\')\n        return ts\n    except Exception as e:\n        print(f\'{prefix} export failure: {e}\')\n\n\ndef export_onnx(model, img, file, opset_version, train, dynamic, simplify):\n    # ONNX model export\n    prefix = colorstr(\'ONNX:\')\n    try:\n        check_requirements((\'onnx\', \'onnx-simplifier\'))\n        import onnx\n\n        print(f\'\\n{prefix} starting export with onnx {onnx.__version__}...\')\n        f = file.with_suffix(\'.onnx\')\n        torch.onnx.export(model, img, f, verbose=False, opset_version=opset_version,\n                          training=torch.onnx.TrainingMode.TRAINING if train else torch.onnx.TrainingMode.EVAL,\n                          do_constant_folding=not train,\n                          input_names=[\'images\'],\n                          output_names=[\'output\'],\n                          dynamic_axes={\'images\': {0: \'batch\', 2: \'height\', 3: \'width\'},  # shape(1,3,640,640)\n                                        \'output\': {0: \'batch\', 1: \'anchors\'}  # shape(1,25200,85)\n                                        } if dynamic else None)\n\n        # Checks\n        model_onnx = onnx.load(f)  # load onnx model\n        onnx.checker.check_model(model_onnx)  # check onnx model\n        # print(onnx.helper.printable_graph(model_onnx.graph))  # print\n\n        # Simplify\n        if simplify:\n            try:\n                import onnxsim\n\n                print(f\'{prefix} simplifying with onnx-simplifier {onnxsim.__version__}...\')\n                model_onnx, check = onnxsim.simplify(\n                    model_onnx,\n                    dynamic_input_shape=dynamic,\n                    input_shapes={\'images\': list(img.shape)} if dynamic else None)\n                assert check, \'assert check failed\'\n                onnx.save(model_onnx, f)\n            except Exception as e:\n                print(f\'{prefix} simplifier failure: {e}\')\n        print(f\'{prefix} export success, saved as {f} ({file_size(f):.1f} MB)\')\n    except Exception as e:\n        print(f\'{prefix} export failure: {e}\')\n\n\ndef export_coreml(model, img, file):\n    # CoreML model export\n    prefix = colorstr(\'CoreML:\')\n    try:\n        import coremltools as ct\n\n        print(f\'\\n{prefix} starting export with coremltools {ct.__version__}...\')\n        f = file.with_suffix(\'.mlmodel\')\n        model.train()  # CoreML exports should be placed in model.train() mode\n        ts = torch.jit.trace(model, img, strict=False)  # TorchScript model\n        model = ct.convert(ts, inputs=[ct.ImageType(\'image\', shape=img.shape, scale=1 / 255.0, bias=[0, 0, 0])])\n        model.save(f)\n        print(f\'{prefix} export success, saved as {f} ({file_size(f):.1f} MB)\')\n    except Exception as e:\n        print(f\'{prefix} export failure: {e}\')\n\n\ndef run(weights=\'./yolov5s.pt\',  # weights path\n        img_size=(640, 640),  # image (height, width)\n        batch_size=1,  # batch size\n        device=\'cpu\',  # cuda device, i.e. 0 or 0,1,2,3 or cpu\n        include=(\'torchscript\', \'onnx\', \'coreml\'),  # include formats\n        half=False,  # FP16 half-precision export\n        inplace=False,  # set YOLOv5 Detect() inplace=True\n        train=False,  # model.train() mode\n        optimize=False,  # TorchScript: optimize for mobile\n        dynamic=False,  # ONNX: dynamic axes\n        simplify=False,  # ONNX: simplify model\n        opset_version=12,  # ONNX: opset version\n        ):\n    t = time.time()\n    include = [x.lower() for x in include]\n    img_size *= 2 if len(img_size) == 1 else 1  # expand\n    file = Path(weights)\n\n    # Load PyTorch model\n    device = select_device(device)\n    assert not (device.type == \'cpu\' and half), \'--half only compatible with GPU export, i.e. use --device 0\'\n    model = attempt_load(weights, map_location=device)  # load FP32 model\n    names = model.names\n\n    # Input\n    gs = int(max(model.stride))  # grid size (max stride)\n    img_size = [check_img_size(x, gs) for x in img_size]  # verify img_size are gs-multiples\n    img = torch.zeros(batch_size, 3, *img_size).to(device)  # image size(1,3,320,192) iDetection\n\n    # Update model\n    if half:\n        img, model = img.half(), model.half()  # to FP16\n    model.train() if train else model.eval()  # training mode = no Detect() layer grid construction\n    for k, m in model.named_modules():\n        if isinstance(m, Conv):  # assign export-friendly activations\n            if isinstance(m.act, nn.Hardswish):\n                m.act = Hardswish()\n            elif isinstance(m.act, nn.SiLU):\n                m.act = SiLU()\n        elif isinstance(m, Detect):\n            m.inplace = inplace\n            m.onnx_dynamic = dynamic\n            # m.forward = m.forward_export  # assign forward (optional)\n\n    for _ in range(2):\n        y = model(img)  # dry runs\n    print(f\"\\n{colorstr(\'PyTorch:\')} starting from {weights} ({file_size(weights):.1f} MB)\")\n\n    # Exports\n    if \'torchscript\' in include:\n        export_torchscript(model, img, file, optimize)\n    if \'onnx\' in include:\n        export_onnx(model, img, file, opset_version, train, dynamic, simplify)\n    if \'coreml\' in include:\n        export_coreml(model, img, file)\n\n    # Finish\n    print(f\'\\nExport complete ({time.time() - t:.2f}s). Visualize with https://github.com/lutzroeder/netron.\')\n\n\ndef parse_opt():\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\'--weights\', type=str, default=\'res/best.pt\', help=\'weights path\')\n    # parser.add_argument(\'--img-size\', nargs=\'+\', type=int, default=[640, 640], help=\'image (height, width)\')\n    parser.add_argument(\'--img-size\', nargs=\'+\', type=int, default=[480, 640], help=\'image (height, width)\')\n    parser.add_argument(\'--batch-size\', type=int, default=1, help=\'batch size\')\n    parser.add_argument(\'--device\', default=\'cpu\', help=\'cuda device, i.e. 0 or 0,1,2,3 or cpu\')\n    parser.add_argument(\'--include\', nargs=\'+\', default=[\'torchscript\', \'onnx\', \'coreml\'], help=\'include formats\')\n    parser.add_argument(\'--half\', action=\'store_true\', help=\'FP16 half-precision export\')\n    parser.add_argument(\'--inplace\', action=\'store_true\', help=\'set YOLOv5 Detect() inplace=True\')\n    parser.add_argument(\'--train\', action=\'store_true\', help=\'model.train() mode\')\n    parser.add_argument(\'--optimize\', action=\'store_true\', help=\'TorchScript: optimize for mobile\')\n    parser.add_argument(\'--dynamic\', action=\'store_true\', help=\'ONNX: dynamic axes\')\n    parser.add_argument(\'--simplify\', action=\'store_true\', help=\'ONNX: simplify model\')\n    parser.add_argument(\'--opset-version\', type=int, default=12, help=\'ONNX: opset version\')\n    opt = parser.parse_args()\n    return opt\n\n\ndef main(opt):\n    set_logging()\n    print(colorstr(\'export: \') + \', \'.join(f\'{k}={v}\' for k, v in vars(opt).items()))\n    run(**vars(opt))\n\n\nif __name__ == \"__main__\":\n    opt = parse_opt()\n    main(opt)\n\n```\n\n\n\n', 'http://static.blinkfox.com/image_20180928.jpg', 1, 3043, 118, b'0', b'1', 3, 1, 1, 2, '2021-11-06 17:14:41', '2021-11-09 16:26:06');

-- ----------------------------
-- Table structure for t_classfication
-- ----------------------------
DROP TABLE IF EXISTS `t_classfication`;
CREATE TABLE `t_classfication`  (
  `class_id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '类别名',
  `display` bit(1) NULL DEFAULT b'1' COMMENT '是否展示',
  `introduction` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '类别简介',
  `color` varchar(24) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '分类的颜色',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`class_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 15 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '分类表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_classfication
-- ----------------------------
INSERT INTO `t_classfication` VALUES (1, '随笔', b'1', '芜湖', '#eea2a4', '2021-03-27 01:10:03', '2021-10-27 22:14:58');
INSERT INTO `t_classfication` VALUES (2, 'Test', b'0', '啊实打实的', '#eb507e', '2021-03-27 12:58:15', '2021-10-27 22:15:26');
INSERT INTO `t_classfication` VALUES (3, '呵呵', b'1', '阿三大啊', '#fbda41', '2021-03-27 12:58:53', '2021-10-27 22:17:59');
INSERT INTO `t_classfication` VALUES (7, '嘻嘻', b'1', '嘻嘻嘻嘻', '#fe8465', '2021-03-27 23:46:42', '2021-10-23 21:18:16');
INSERT INTO `t_classfication` VALUES (8, '测试', b'1', '风格恢复', '#1ba784', '2021-10-23 21:19:35', '2021-10-27 22:16:17');
INSERT INTO `t_classfication` VALUES (9, '离开家', b'1', '撒地方', '#229453', '2021-10-23 21:19:56', '2021-10-27 22:16:55');
INSERT INTO `t_classfication` VALUES (10, 'VS到了', b'0', '大根堆', '#41ae3c', '2021-10-27 22:00:06', '2021-10-27 22:17:14');
INSERT INTO `t_classfication` VALUES (14, 'utyut', b'1', 'utyutyut', '#eb507e', '2021-10-27 22:21:20', '2021-10-27 22:21:20');

-- ----------------------------
-- Table structure for t_comment
-- ----------------------------
DROP TABLE IF EXISTS `t_comment`;
CREATE TABLE `t_comment`  (
  `comment_id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `content` varchar(2048) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '评论内容',
  `article_id` bigint NOT NULL COMMENT '文章id',
  `fid` bigint NOT NULL COMMENT '父级评论id',
  `fcomment_nickname` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '父级评论昵称',
  `nickname` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '评论者昵称',
  `browser` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '浏览器',
  `os` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '操作系统',
  `request_ip` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '请求ip',
  `address` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT 'ip来源',
  `is_delete` bit(1) NULL DEFAULT b'0' COMMENT '是否已被删除',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`comment_id`) USING BTREE,
  INDEX `aid_for_arc2`(`article_id`) USING BTREE,
  INDEX `fid_for_com`(`fid`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_comment
-- ----------------------------

-- ----------------------------
-- Table structure for t_link
-- ----------------------------
DROP TABLE IF EXISTS `t_link`;
CREATE TABLE `t_link`  (
  `link_id` bigint NOT NULL AUTO_INCREMENT,
  `nick_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '昵称',
  `avatar` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '头像',
  `link` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '链接',
  `introduction` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '简介',
  `sort` smallint NULL DEFAULT NULL COMMENT '排序值',
  `status` smallint NULL DEFAULT NULL COMMENT '0: 未过 1： 等待审核 2：过了',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`link_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_link
-- ----------------------------
INSERT INTO `t_link` VALUES (1, 'blinkfox', 'http://blinkfox.com/medias/avatar.jpg', 'http://blinkfox.com/', 'Matery主题作者', 1, 2, '2021-04-03 20:10:29', '2021-11-10 22:01:07');

-- ----------------------------
-- Table structure for t_message
-- ----------------------------
DROP TABLE IF EXISTS `t_message`;
CREATE TABLE `t_message`  (
  `message_id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `content` varchar(2048) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '评论内容',
  `fid` bigint NOT NULL COMMENT '父级留言id',
  `fcomment_nickname` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '父级留言昵称',
  `nickname` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '留言者昵称',
  `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '邮箱',
  `site_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '网站链接',
  `browser` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '浏览器',
  `os` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '操作系统',
  `request_ip` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '请求ip',
  `address` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT 'ip来源',
  `is_delete` bit(1) NULL DEFAULT b'0' COMMENT '是否被删除',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`message_id`) USING BTREE,
  INDEX `fid_for_com`(`fid`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 21 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_message
-- ----------------------------
INSERT INTO `t_message` VALUES (16, '测试留言', 0, '', '测试01', '312132132@qq.com', 'www.baidu.com', 'Mobile Safari', 'iOS 10 (iPhone)', '192.168.137.1', '内网IP', b'0', '2021-10-25 00:55:48');
INSERT INTO `t_message` VALUES (19, '生产环境评论测试', 0, '', NULL, NULL, NULL, 'Chrome 9', 'Windows 10', '47.103.193.67', '中国|浙江省|杭州市|阿里巴巴', b'0', '2021-11-08 15:04:25');
INSERT INTO `t_message` VALUES (20, '23132', 19, NULL, NULL, NULL, NULL, 'Chrome 9', 'Windows 10', '47.103.193.67', '中国|浙江省|杭州市|阿里巴巴', b'0', '2021-11-08 15:05:45');
INSERT INTO `t_message` VALUES (21, '。', 20, NULL, NULL, NULL, NULL, 'Chrome 9', 'Windows 10', '47.103.193.67', '中国|浙江省|杭州市|阿里巴巴', b'0', '2021-11-09 00:16:12');

-- ----------------------------
-- Table structure for t_photo
-- ----------------------------
DROP TABLE IF EXISTS `t_photo`;
CREATE TABLE `t_photo`  (
  `photo_id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '图片地址',
  `description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '描述',
  `sort` smallint NULL DEFAULT NULL COMMENT '排序值',
  `display` bit(1) NULL DEFAULT b'0' COMMENT '是否显示 默认0 显示',
  `create_time` datetime(0) NULL DEFAULT NULL,
  `update_time` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`photo_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_photo
-- ----------------------------

-- ----------------------------
-- Table structure for t_tag
-- ----------------------------
DROP TABLE IF EXISTS `t_tag`;
CREATE TABLE `t_tag`  (
  `tag_id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `name` varchar(48) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '标签名',
  `color` varchar(24) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '标签颜色',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '标签创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '标签更新时间',
  PRIMARY KEY (`tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 19 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '标签表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_tag
-- ----------------------------
INSERT INTO `t_tag` VALUES (5, 'JavaEE', '#fe8541', '2021-03-25 23:46:39', '2021-10-24 01:08:08');
INSERT INTO `t_tag` VALUES (6, 'Mybatis', '#E86543', '2021-03-25 23:47:27', '2021-03-25 23:47:27');
INSERT INTO `t_tag` VALUES (7, 'SpringBoot', '#12a182', '2021-03-26 00:13:07', '2021-03-26 22:56:55');
INSERT INTO `t_tag` VALUES (9, 'Spring', '#2b1216', '2021-03-26 21:00:08', '2021-03-26 22:59:26');
INSERT INTO `t_tag` VALUES (10, 'SpringMVC', '#eb507e', '2021-03-26 21:00:41', '2021-03-26 21:00:41');
INSERT INTO `t_tag` VALUES (11, 'Mysql', '#126bae', '2021-03-26 21:01:26', '2021-03-26 21:01:26');
INSERT INTO `t_tag` VALUES (12, 'Redis', '#65e593', '2021-10-24 01:09:07', '2021-10-24 01:09:07');
INSERT INTO `t_tag` VALUES (17, 'JUC', '#e77c8e', '2021-11-06 15:36:13', '2021-11-06 15:36:13');
INSERT INTO `t_tag` VALUES (18, 'Java', '#e77c8e', '2021-11-06 15:36:13', '2021-11-06 15:36:13');

-- ----------------------------
-- Table structure for t_tag_article
-- ----------------------------
DROP TABLE IF EXISTS `t_tag_article`;
CREATE TABLE `t_tag_article`  (
  `article_id` bigint NOT NULL COMMENT '文章id',
  `tag_id` bigint NOT NULL COMMENT '标签id',
  PRIMARY KEY (`article_id`, `tag_id`) USING BTREE,
  INDEX `tid_for_tag`(`tag_id`) USING BTREE,
  INDEX `aid_for_arc3`(`article_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_tag_article
-- ----------------------------
INSERT INTO `t_tag_article` VALUES (3, 5);
INSERT INTO `t_tag_article` VALUES (1, 6);
INSERT INTO `t_tag_article` VALUES (2, 6);
INSERT INTO `t_tag_article` VALUES (3, 6);
INSERT INTO `t_tag_article` VALUES (5, 6);
INSERT INTO `t_tag_article` VALUES (1, 7);
INSERT INTO `t_tag_article` VALUES (2, 7);
INSERT INTO `t_tag_article` VALUES (3, 7);
INSERT INTO `t_tag_article` VALUES (4, 7);
INSERT INTO `t_tag_article` VALUES (5, 7);
INSERT INTO `t_tag_article` VALUES (12, 7);
INSERT INTO `t_tag_article` VALUES (2, 9);
INSERT INTO `t_tag_article` VALUES (4, 9);
INSERT INTO `t_tag_article` VALUES (5, 9);
INSERT INTO `t_tag_article` VALUES (8, 9);
INSERT INTO `t_tag_article` VALUES (9, 9);
INSERT INTO `t_tag_article` VALUES (10, 9);
INSERT INTO `t_tag_article` VALUES (12, 9);
INSERT INTO `t_tag_article` VALUES (6, 10);
INSERT INTO `t_tag_article` VALUES (7, 10);
INSERT INTO `t_tag_article` VALUES (11, 10);
INSERT INTO `t_tag_article` VALUES (12, 10);
INSERT INTO `t_tag_article` VALUES (3, 11);
INSERT INTO `t_tag_article` VALUES (13, 17);
INSERT INTO `t_tag_article` VALUES (13, 18);
INSERT INTO `t_tag_article` VALUES (14, 18);

SET FOREIGN_KEY_CHECKS = 1;
